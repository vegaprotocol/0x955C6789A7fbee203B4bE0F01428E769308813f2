{"remainingRequest":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Downloads/cryptowhaler/src/App/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Downloads/cryptowhaler/src/App/App.vue","mtime":1595121760000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Loading from 'vue-full-loading';\nimport NotificationPlugin from '../plugins/notifications.js';\nimport EventBus, { EventNames } from '../eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\nimport HeaderSection from '@/components/HeaderSection/HeaderSection.vue';\nimport SideMenu from '@/components/SideMenu/SideMenu.vue';\nimport ModalBox from '@/components/ModalBox/ModalBox.vue';\nimport VegaProtocolService from '@/services/VegaProtocolService';\nimport LocalStorage from '@/utils/localStorage.js';\nimport Vuikit from 'vuikit';\nimport Notifications from 'vue-notification';\nimport Datetime from 'vue-datetime'; // You need a specific loader for CSS files\n\nimport 'vue-datetime/dist/vue-datetime.css';\nVue.use(Datetime);\nVue.use(Vuikit);\nVue.use(Loading);\nVue.use(NotificationPlugin);\nVue.use(Notifications);\nexport default {\n  components: {\n    Loading,\n    HeaderSection,\n    SideMenu,\n    ModalBox\n  },\n\n  data() {\n    return {\n      loaderLabel: 'Loading...',\n      depositModalShown: false,\n      withdrawlModalShown: false,\n      loginModalShown: false,\n      //Added\n      logoutModalShown: true,\n      //Added\n      shouldOpen: false,\n      firstTime: true\n    };\n  },\n\n  computed: {\n    showLoader() {\n      return this.$store.getters.showLoader;\n    },\n\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    }\n\n  },\n\n  async created() {\n    //STARTS GETTING TICKER DATA WHEN WEBSITE IS LOADED\n    localStorage.shouldOpen = true;\n    ExchangeDataEventBus.$emit('ticker-connect');\n    this.getMarkets();\n  },\n\n  mounted() {\n    // this.loginListener = body => this.fetchConfigs(body.username);\n    this.loginListener = body => this.fetchConfigsLogin(body.username); //Login \n\n\n    this.logoutListener = body => this.fetchConfigsLogout(); //Logout\n\n\n    this.sessionExpiryListener = () => {\n      if (LocalStorage.isUserLoggedIn()) {\n        this.$showErrorMsg({\n          message: 'Your session has expired. Please login again.'\n        });\n      }\n\n      EventBus.$emit(EventNames.userLogout);\n    };\n\n    EventBus.$on(EventNames.userLogin, this.loginListener); //AUTH\n\n    EventBus.$on(EventNames.userLogout, this.logoutListener); //AUTH\n\n    EventBus.$on(EventNames.userSessionExpired, this.sessionExpiryListener); //AUTH\n  },\n\n  destroyed() {\n    //SESSION DESTROYED \n    EventBus.$off(EventNames.userLogin, this.loginListener);\n    EventBus.$off(EventNames.userLogout, this.logoutListener); //AUTH    \n\n    EventBus.$off(EventNames.userSessionExpired, this.sessionExpiryListener);\n  },\n\n  methods: {\n    async fetchConfigs() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n    },\n\n    async fetchConfigsLogin() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      this.toggleLoginModal();\n    },\n\n    async fetchConfigsLogout() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1); // console.log('IN LOGOUT TOGGLING');\n      // console.log(this.toggleLogoutModal);\n\n      this.toggleLogoutModal(); // console.log(this.toggleLogoutModal);\n    },\n\n    toggleDepositModal() {\n      this.depositModalShown = !this.depositModalShown;\n    },\n\n    toggleWithdrawlModal() {\n      this.withdrawlModalShown = !this.withdrawlModalShown;\n    },\n\n    toggleLoginModal() {\n      //ADDED\n      // console.log(this.loginModalShown);\n      this.loginModalShown = !this.loginModalShown; // console.log(this.loginModalShown);      \n    },\n\n    toggleLogoutModal() {\n      //ADDED\n      // console.log(this.logoutModalShown);    \n      this.logoutModalShown = !this.logoutModalShown; // console.log(this.logoutModalShown);        \n    },\n\n    closeBtnClicked() {\n      sessionStorage.shouldOpen = true;\n    },\n\n    async getMarkets() {\n      //getting markets\n      const markets = await VegaProtocolService.get_markets(); // console.log(markets);\n\n      if (markets.status == 200) {\n        let marketsData = [];\n\n        for (let i = 0; i < markets.data.markets.length; i++) {\n          let obj = {};\n          obj.id = markets.data.markets[i].id;\n          obj.data = {};\n          obj.data.name = markets.data.markets[i].name;\n          obj.data.instrument_name = markets.data.markets[i].tradableInstrument.instrument.name;\n          obj.baseName = markets.data.markets[i].tradableInstrument.instrument.baseName;\n          obj.quoteName = markets.data.markets[i].tradableInstrument.instrument.quoteName; // console.log(obj);     \n\n          this.$store.commit('mappedMarkets', obj); //mapping markets by ID\n\n          this.$store.commit('mappedMarketsbyName', obj); //mapping markets by name\n\n          marketsData.push(obj);\n        } // console.log(marketsData);\n\n\n        this.$store.commit('markets', marketsData); // console.log(this.$store.getters.markets);\n        // console.log(this.$store.getters.mappedMarkets);\n      } else {\n        this.$showErrorMsg({\n          message: 'Couldn\\'t fetch Markets data. Some of the features may not function properly'\n        });\n      }\n    }\n\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <header-section @show-deposit-modal=\"toggleDepositModal\" @show-withdrawl-modal=\"toggleWithdrawlModal\" @show-login-modal=\"toggleLoginModal\" @show-logout-modal=\"toggleLogoutModal\" />\n\n     <div class=\"uk-hidden@m\">\n    <side-menu @show-deposit-modal=\"toggleDepositModal\" @show-withdrawl-modal=\"toggleWithdrawlModal\"  @show-login-modal=\"toggleLoginModal\" @show-logout-modal=\"toggleLogoutModal\" />\n    </div>\n\n    <modal-box internalComponent=\"deposit\" :show='depositModalShown' @modal-closed='toggleDepositModal' />\n    <modal-box internalComponent=\"withdrawal\"  :show='withdrawlModalShown' @modal-closed='toggleWithdrawlModal' />\n    <modal-box internalComponent=\"vega-login\"  :show='loginModalShown' @modal-closed='toggleLoginModal' />\n    <modal-box internalComponent=\"vega-logout\" :show='logoutModalShown' @modal-closed='toggleLogoutModal' />\n\n    <notifications group=\"foo\" />\n\n    <loading :show=\"showLoader\" :label=\"loaderLabel\"></loading>\n\n    <div class=\"page-wrapper\">\n      <router-view/>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Loading from 'vue-full-loading';\nimport NotificationPlugin from '../plugins/notifications.js';\nimport EventBus, {\n  EventNames,\n} from '../eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n\nimport HeaderSection from '@/components/HeaderSection/HeaderSection.vue';\nimport SideMenu from '@/components/SideMenu/SideMenu.vue';\nimport ModalBox from '@/components/ModalBox/ModalBox.vue';\nimport VegaProtocolService from '@/services/VegaProtocolService';\nimport LocalStorage from '@/utils/localStorage.js';\nimport Vuikit from 'vuikit';\nimport Notifications from 'vue-notification';\nimport Datetime from 'vue-datetime';\n// You need a specific loader for CSS files\nimport 'vue-datetime/dist/vue-datetime.css';\n \nVue.use(Datetime);\nVue.use(Vuikit);\nVue.use(Loading);\nVue.use(NotificationPlugin);\nVue.use(Notifications);\n\n\nexport default {\n  components: {\n    Loading,\n    HeaderSection,\n    SideMenu,\n    ModalBox,\n  },\n\n\n  data() {\n    return {\n      loaderLabel: 'Loading...',\n      depositModalShown: false,\n      withdrawlModalShown: false,\n      loginModalShown:false,      //Added\n      logoutModalShown:true,     //Added\n      shouldOpen: false,\n      firstTime: true,\n    };\n  },\n\n\n  computed: {\n    showLoader() {\n      return this.$store.getters.showLoader;\n    },\n    \n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n  },\n\n\n  async created() {         //STARTS GETTING TICKER DATA WHEN WEBSITE IS LOADED\n    localStorage.shouldOpen = true;\n    ExchangeDataEventBus.$emit('ticker-connect');\n    this.getMarkets();\n  },\n\n  mounted() {\n    // this.loginListener = body => this.fetchConfigs(body.username);\n    this.loginListener = body => this.fetchConfigsLogin(body.username);     //Login \n\n    this.logoutListener = body => this.fetchConfigsLogout();     //Logout\n    this.sessionExpiryListener = () => {\n      if (LocalStorage.isUserLoggedIn()) {\n        this.$showErrorMsg({\n          message: 'Your session has expired. Please login again.',\n        });\n      }\n      EventBus.$emit(EventNames.userLogout);\n    };\n  \n    EventBus.$on(EventNames.userLogin, this.loginListener);           //AUTH\n    EventBus.$on(EventNames.userLogout, this.logoutListener);           //AUTH\n    EventBus.$on(EventNames.userSessionExpired, this.sessionExpiryListener);  //AUTH\n  },\n\n\n  destroyed() {       //SESSION DESTROYED \n    EventBus.$off(EventNames.userLogin, this.loginListener);\n    EventBus.$off(EventNames.userLogout, this.logoutListener);           //AUTH    \n    EventBus.$off(EventNames.userSessionExpired, this.sessionExpiryListener);\n  },\n\n\n  methods: {\n    async fetchConfigs() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n    },\n    async fetchConfigsLogin() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      this.toggleLoginModal();\n    },\n    async fetchConfigsLogout() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      // console.log('IN LOGOUT TOGGLING');\n      // console.log(this.toggleLogoutModal);\n      this.toggleLogoutModal();\n      // console.log(this.toggleLogoutModal);\n    },\n\n    toggleDepositModal() {\n      this.depositModalShown = !this.depositModalShown;\n    },\n    toggleWithdrawlModal() {\n      this.withdrawlModalShown = !this.withdrawlModalShown;\n    },\n    toggleLoginModal() {      //ADDED\n      // console.log(this.loginModalShown);\n      this.loginModalShown = !this.loginModalShown;\n      // console.log(this.loginModalShown);      \n    },\n    toggleLogoutModal() {   //ADDED\n      // console.log(this.logoutModalShown);    \n      this.logoutModalShown = !this.logoutModalShown;\n      // console.log(this.logoutModalShown);        \n    },\n    closeBtnClicked() {\n      sessionStorage.shouldOpen = true;\n    },\n    async getMarkets() {    //getting markets\n      const markets = await VegaProtocolService.get_markets();\n      // console.log(markets);\n      if (markets.status == 200 ) {\n        let marketsData = [];\n        for (let i=0;i<markets.data.markets.length;i++) { \n          let obj = {};\n          obj.id = markets.data.markets[i].id;\n          obj.data = {};\n          obj.data.name = markets.data.markets[i].name;\n          obj.data.instrument_name = markets.data.markets[i].tradableInstrument.instrument.name;          \n          obj.baseName = markets.data.markets[i].tradableInstrument.instrument.baseName;\n          obj.quoteName = markets.data.markets[i].tradableInstrument.instrument.quoteName;          \n          // console.log(obj);     \n          this.$store.commit('mappedMarkets',obj);        //mapping markets by ID\n          this.$store.commit('mappedMarketsbyName',obj);  //mapping markets by name\n          marketsData.push(obj);    \n        }\n        // console.log(marketsData);\n        this.$store.commit('markets',marketsData);\n        // console.log(this.$store.getters.markets);\n        // console.log(this.$store.getters.mappedMarkets);\n      }\n      else {\n        this.$showErrorMsg({message: 'Couldn\\'t fetch Markets data. Some of the features may not function properly',});\n      }\n    },\n\n  },\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\">\n  \n</style>\n"],"sourceRoot":"src/App"}]}