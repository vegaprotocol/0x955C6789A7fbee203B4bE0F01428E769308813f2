{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Landing/MarketView/BookPane/LiveTrades/LiveTrades.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Landing/MarketView/BookPane/LiveTrades/LiveTrades.vue","mtime":1595618551658},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\nexport default {\n  name: 'live-trades',\n  components: {\n    Spinner\n  },\n  props: {\n    parentHeight: Number //communicated to parent\n\n  },\n\n  data() {\n    return {\n      trades: {},\n      tableHeight: '',\n      showLoader: false,\n      snapTaken: false,\n      marketId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN' //this.$store.state.selectedVegaMarketId,\n\n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      trades: {\n        query: gql`subscription name($marketId: String!) {\n                  trades (marketId: $marketId) {\n                      market {\n                        id\n                      }\n                      price\n                      size\n                      aggressor\n                      createdAt\n                  }\n                }`,\n\n        variables() {\n          return {\n            marketId: this.marketId\n          };\n        },\n\n        result({\n          data,\n          loading\n        }) {\n          if (loading) {// console.log('loading');\n          }\n\n          let _trades = data.trades; //          // console.log(_trades[0].market.id);\n\n          if (!this.snapTaken) {\n            // // console.log(_trades[0].market.id);\n            //            // console.log(_trades);\n            this.snapshotListener(_trades);\n            this.snapTaken = true;\n          } else {\n            // // console.log(_trades);\n            for (let i = _trades.length - 1; i >= 0; i--) {\n              // // console.log(_trades[i]);\n              this.liveTradeListener(_trades[i]);\n            }\n          }\n        }\n\n      }\n    }\n  },\n  watch: {\n    parentHeight: function (newVal) {\n      let calcHeight = newVal;\n      this.tableHeight = 'calc(100vh - ' + (calcHeight + 100) + 'px';\n    }\n  },\n\n  created() {\n    this.snapshotListener = snap => {\n      this.trades = snap;\n      setTimeout(() => {\n        this.showLoader = false;\n      }, 1000);\n      const liveTrade = snap[0];\n      let price;\n\n      if (liveTrade.aggressor == 'Sell') {\n        price = -Number(liveTrade.price);\n      } else {\n        price = Number(liveTrade.price);\n      }\n\n      this.$store.commit('liveTradePrice', Math.abs((price / 100000).toFixed(5)));\n      this.$store.commit('removeLoaderTask', 1);\n    };\n\n    this.reset = newMarket => {\n      this.showLoader = true;\n      this.snapTaken = false;\n      this.trades = {};\n      this.marketId = newMarket.Id; // console.log('New Selected Market being fetched in LiveTrades with Id - ' + this.marketId);\n    };\n\n    this.liveTradeListener = liveTrade => {\n      this.trades.unshift(liveTrade);\n\n      if (this.trades.length > 100) {\n        this.trades.pop();\n      }\n\n      let price;\n\n      if (liveTrade.aggressor == 'Sell') {\n        price = -Number(liveTrade.price);\n      } else {\n        price = Number(liveTrade.price);\n      }\n\n      this.$store.commit('liveTradePrice', Math.abs((price / 100000).toFixed(5)));\n    };\n\n    ExchangeDataEventBus.$on('change-vega-market', this.reset);\n  },\n\n  destroyed() {\n    this.snapTaken = false;\n    ExchangeDataEventBus.$on('change-vega-market', this.reset);\n  }\n\n};",{"version":3,"sources":["LiveTrades.vue"],"names":[],"mappings":"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","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\n\nexport default {\n  name: 'live-trades',\n\n  components: {\n    Spinner,\n  },\n\n  props: {\n    parentHeight: Number,   //communicated to parent\n  },\n\n  data() {\n    return {\n      trades: {},\n      tableHeight: '',\n      showLoader:false,\n      snapTaken: false,\n      marketId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN', //this.$store.state.selectedVegaMarketId,\n      \n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      trades: {\n        query: gql`subscription name($marketId: String!) {\n                  trades (marketId: $marketId) {\n                      market {\n                        id\n                      }\n                      price\n                      size\n                      aggressor\n                      createdAt\n                  }\n                }`,\n\n        variables() {  return {marketId: this.marketId,};  },\n\n        result({data,loading,}) {\n          if (loading) {\n            // console.log('loading');\n          }\n          let _trades = data.trades;\n          //          // console.log(_trades[0].market.id);\n          if (!this.snapTaken) { \n            // // console.log(_trades[0].market.id);\n            //            // console.log(_trades);\n            this.snapshotListener(_trades);\n            this.snapTaken = true;\n          }\n          else {\n            // // console.log(_trades);\n            for (let i=(_trades.length-1); i>=0;i--) {\n              // // console.log(_trades[i]);\n              this.liveTradeListener(_trades[i]);\n            }\n          }\n        },\n      },\n    },\n  },\n\n  watch: {\n    parentHeight: function(newVal) {\n      let calcHeight = newVal;\n      this.tableHeight = 'calc(100vh - ' + (calcHeight  + 100) + 'px';\n    },\n  },\n\n  created() {\n\n    this.snapshotListener = snap => {\n      this.trades = snap;\n      setTimeout(() => {this.showLoader=false;}, 1000);\n      const liveTrade = snap[0];\n      let price;\n      if (liveTrade.aggressor == 'Sell') {\n        price = - Number(liveTrade.price);\n      } \n      else {\n        price = Number(liveTrade.price);\n      }\n      this.$store.commit('liveTradePrice', Math.abs((price/100000).toFixed(5)));\n      this.$store.commit('removeLoaderTask', 1);\n    };\n\n    this.reset = (newMarket) => {\n      this.showLoader=true;\n      this.snapTaken = false;\n      this.trades = {};\n      this.marketId = newMarket.Id;\n      // console.log('New Selected Market being fetched in LiveTrades with Id - ' + this.marketId);\n    };\n\n    this.liveTradeListener = liveTrade => {\n      this.trades.unshift(liveTrade);\n      if (this.trades.length > 100) {\n        this.trades.pop();\n      }\n      let price;\n      if (liveTrade.aggressor == 'Sell') {\n        price = -Number(liveTrade.price);\n      } else {\n        price = Number(liveTrade.price);\n      }\n      this.$store.commit('liveTradePrice', Math.abs((price/100000).toFixed(5)));\n    };\n\n    ExchangeDataEventBus.$on('change-vega-market', this.reset);\n  },\n\n  destroyed() {\n    this.snapTaken = false;\n    ExchangeDataEventBus.$on('change-vega-market', this.reset);\n  },\n  \n};\n</script>\n<style src=\"./style.scss\" lang=\"scss\"  scoped></style>\n"],"sourceRoot":"src/components/Landing/MarketView/BookPane/LiveTrades"}]}