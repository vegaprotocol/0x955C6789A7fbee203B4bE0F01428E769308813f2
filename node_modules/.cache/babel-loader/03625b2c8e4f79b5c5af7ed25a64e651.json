{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Withdrawl/CryptoWithdrawls/CryptoWithdrawls.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Withdrawl/CryptoWithdrawls/CryptoWithdrawls.vue","mtime":1595618551721},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\nimport { stringArrayToHtmlList } from '@/utils/utility';\nexport default {\n  name: 'crypto-withdrawls',\n\n  data() {\n    return {\n      supportedCoins: ['BTC', 'eth', 'LTC', 'xrp'],\n      formValue: {\n        amount: '',\n        recievingAddress: '',\n        coin: 'BTC'\n      },\n      withdrawalFee: 0,\n      statuses: {\n        btc: 'feature under development',\n        ltc: 'feature under development',\n        eth: 'feature under development',\n        dai: 'feature under development'\n      },\n      fees: {\n        btc: 0,\n        eth: 0,\n        ltc: 0,\n        xrp: 0\n      }\n    };\n  },\n\n  watch: {\n    'formValue.coin': {\n      handler: function (to) {\n        this.showFees(to);\n      },\n      deep: true\n    }\n  },\n  methods: {\n    getStatus(coin) {\n      if (coin === 'btc') {\n        return 'feature under development';\n      } else if (coin === 'eth') {\n        return 'feature under development';\n      } else if (coin === 'ltc') {\n        return 'feature under development';\n      } else if (coin === 'xrp') {\n        return 'feature under development';\n      }\n    },\n\n    withdrawCrypto() {\n      let validationErrors = [];\n\n      if (!(Number(this.formValue.amount) > 0)) {\n        validationErrors.push('Invalid Amount');\n      }\n\n      if (!this.formValue.recievingAddress) validationErrors.push('Recieving Address is required');\n\n      if (validationErrors.length) {\n        this.$showErrorMsg({\n          message: stringArrayToHtmlList(validationErrors)\n        });\n      } else {\n        this.otpSent = true;\n        this.$showErrorMsg({\n          message: 'This feature is currently not supported in Vega testnet'\n        });\n      }\n\n      this.$store.commit('removeLoaderTask', 1);\n    },\n\n    getGrpId(index) {\n      return 'grp-a' + index;\n    },\n\n    getGrpId2(index) {\n      return 'grp-b' + index;\n    },\n\n    async showFees(coin) {\n      this.withdrawalFee = this.fees[coin];\n    }\n\n  }\n};",{"version":3,"sources":["CryptoWithdrawls.vue"],"names":[],"mappings":";;AAGA,SAAA,qBAAA,QAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,gBAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAFA;AAOA,MAAA,aAAA,EAAA,CAPA;AAQA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,2BADA;AAEA,QAAA,GAAA,EAAA,2BAFA;AAGA,QAAA,GAAA,EAAA,2BAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OARA;AAcA,MAAA,IAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA,CAFA;AAGA,QAAA,GAAA,EAAA,CAHA;AAIA,QAAA,GAAA,EAAA;AAJA;AAdA,KAAA;AAqBA,GAxBA;;AAyBA,EAAA,KAAA,EAAA;AACA,sBAAA;AACA,MAAA,OAAA,EAAA,UAAA,EAAA,EAAA;AACA,aAAA,QAAA,CAAA,EAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA;AADA,GAzBA;AAkCA,EAAA,OAAA,EAAA;AAEA,IAAA,SAAA,CAAA,IAAA,EAAA;AACA,UAAA,IAAA,KAAA,KAAA,EAAA;AACA,eAAA,2BAAA;AACA,OAFA,MAEA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,eAAA,2BAAA;AACA,OAFA,MAEA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,eAAA,2BAAA;AACA,OAFA,MAEA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,eAAA,2BAAA;AACA;AACA,KAZA;;AAeA,IAAA,cAAA,GAAA;AACA,UAAA,gBAAA,GAAA,EAAA;;AACA,UAAA,EAAA,MAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,gBAAA,CAAA,IAAA,CAAA,gBAAA;AACA;;AACA,UAAA,CAAA,KAAA,SAAA,CAAA,gBAAA,EACA,gBAAA,CAAA,IAAA,CAAA,+BAAA;;AACA,UAAA,gBAAA,CAAA,MAAA,EAAA;AACA,aAAA,aAAA,CAAA;AACA,UAAA,OAAA,EAAA,qBAAA,CAAA,gBAAA;AADA,SAAA;AAGA,OAJA,MAKA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,aAAA,aAAA,CAAA;AACA,UAAA,OAAA,EAAA;AADA,SAAA;AAGA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,CAAA;AACA,KAlCA;;AAmCA,IAAA,QAAA,CAAA,KAAA,EAAA;AACA,aAAA,UAAA,KAAA;AACA,KArCA;;AAsCA,IAAA,SAAA,CAAA,KAAA,EAAA;AACA,aAAA,UAAA,KAAA;AACA,KAxCA;;AAyCA,UAAA,QAAA,CAAA,IAAA,EAAA;AACA,WAAA,aAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA;AACA;;AA3CA;AAlCA,CAAA","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport { stringArrayToHtmlList, } from '@/utils/utility';\n\nexport default {\n  name: 'crypto-withdrawls',\n  data() {\n    return {\n      supportedCoins: ['BTC', 'eth', 'LTC','xrp',],\n      formValue: {\n        amount: '',\n        recievingAddress: '',\n        coin: 'BTC',\n      },\n      withdrawalFee: 0,\n      statuses: {\n        btc: 'feature under development',\n        ltc: 'feature under development',\n        eth: 'feature under development',\n        dai: 'feature under development',\n      },\n      fees: {\n        btc: 0,\n        eth: 0,\n        ltc: 0,\n        xrp: 0,\n      },\n    };\n  },\n  watch: {\n    'formValue.coin': {\n      handler: function(to) {\n        this.showFees(to);\n      },\n      deep: true,\n    },\n  },\n\n  methods: {\n\n    getStatus(coin) {\n      if(coin === 'btc') {\n        return  'feature under development';\n      } else  if(coin === 'eth') {\n        return  'feature under development';\n      } else if(coin === 'ltc'){\n        return  'feature under development';\n      } else if(coin === 'xrp'){\n        return  'feature under development';\n      }\n    },\n\n\n    withdrawCrypto() {\n      let validationErrors = [];\n      if (!(Number(this.formValue.amount) > 0)) {\n        validationErrors.push('Invalid Amount');\n      }\n      if (!this.formValue.recievingAddress)\n        validationErrors.push('Recieving Address is required');\n      if (validationErrors.length) {\n        this.$showErrorMsg({\n          message: stringArrayToHtmlList(validationErrors),\n        });\n      } \n      else {\n        this.otpSent = true;\n        this.$showErrorMsg({\n          message: 'This feature is currently not supported in Vega testnet',\n        });\n      }\n      this.$store.commit('removeLoaderTask', 1);\n    },\n    getGrpId(index) {\n      return 'grp-a' + index;\n    },\n    getGrpId2(index) {\n      return 'grp-b' + index;\n    },\n    async showFees(coin) {\n      this.withdrawalFee = this.fees[coin];\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.resend {\n  line-height: 40px;\n}\n.resend :hover {\n  color: var(--primary-text-color);\n}\n</style>\n"],"sourceRoot":"src/components/Withdrawl/CryptoWithdrawls"}]}