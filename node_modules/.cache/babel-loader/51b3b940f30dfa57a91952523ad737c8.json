{"remainingRequest":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Downloads/cryptowhaler/src/components/Landing/MarketView/TradePane/Ticker/Ticker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Downloads/cryptowhaler/src/components/Landing/MarketView/TradePane/Ticker/Ticker.vue","mtime":1595121760000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData'; // import VegaProtocolService from '@/services/VegaProtocolService';\n\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\nconst LIVE_TICKERS = gql`\nsubscription {\n  marketData  {\n    market {\n      id\n      name\n      tradableInstrument {\n        instrument {\n          name \n          baseName\n          quoteName\n        }    \n      }\n    }\n    bestBidPrice\n    bestOfferPrice\n    midPrice\n  }\n}`;\nexport default {\n  name: 'ticker',\n  components: {\n    Spinner\n  },\n\n  data() {\n    return {\n      tickerObj: {},\n      tickers: [],\n      snapTaken: false,\n      showLoader: false,\n      i: 0 //   toggleOn: true,\n      //   toggleFees: false,\n\n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      tickers: {\n        query: LIVE_TICKERS,\n\n        result(data) {\n          let tickers = data.data.marketData;\n          this.i++; // // console.log(tickers);\n\n          setTimeout(() => {\n            this.addnewTicker(tickers);\n          }, this.i * 1000 + 1000);\n        }\n\n      }\n    }\n  },\n\n  created() {\n    if (JSON.stringify(this.$store.state.tickerData) == '{}') {\n      //Showing loader initially when page loaded\n      this.showLoader = true;\n    }\n\n    setTimeout(() => {\n      this.showLoader = false;\n    }, 3000);\n  },\n\n  methods: {\n    tickerClick(ticker) {\n      let selectedMarket = {\n        'Name': ticker.markName,\n        'Id': ticker.markId\n      };\n      let selectedMarketTrade = {\n        'Name': ticker.markName,\n        'Id': ticker.markId,\n        'baseName': ticker.baseName,\n        'quoteName': ticker.quoteName,\n        'summary': ticker.summary\n      }; // console.log(selectedMarket);\n\n      this.$store.commit('changeSelectedVegaMarket', selectedMarket);\n      this.$store.commit('changeSelectedVegaMarketSummary', ticker.summary);\n      this.$store.commit('changeSelectedVegaMarketbaseName', ticker.baseName);\n      this.$store.commit('changeSelectedVegaMarketquoteName', ticker.quoteName);\n      this.$store.commit('changeSelectedVegaMarketTrade', selectedMarketTrade); //Used for trade Tab\n\n      this.$store.commit('changeSelectedVegaMarketNameTrade', ticker.markName); //Name change (eq - ETHVUSD/DEC20)\n\n      this.$store.commit('changeSelectedVegaMarketTradeId', ticker.markId); //Selected market in TradeTab - ID Change\n\n      this.$store.commit('changeSelectedVegaMarketbaseNameTrade', ticker.baseName);\n      this.$store.commit('changeSelectedVegaMarketquoteNameTrade', ticker.quoteName);\n      this.$store.commit('changeSelectedVegaMarketSummaryTrade', ticker.summary);\n      ExchangeDataEventBus.$emit('change-vega-market', selectedMarket);\n      ExchangeDataEventBus.$emit('change-vega-header', {\n        'Name': ticker.markName,\n        'Summary': ticker.summary\n      });\n      this.$root.$emit('tickerClicked');\n    },\n\n    addnewTicker(tickers) {\n      let obj = [];\n      obj.markId = tickers.market.id;\n      obj.markName = tickers.market.name;\n      obj.bid = (Number(tickers.bestBidPrice) / 100000).toFixed(5);\n      obj.ask = (Number(tickers.bestOfferPrice) / 100000).toFixed(5);\n      obj.mid = (Number(tickers.midPrice) / 1000).toFixed(5);\n      obj.summary = tickers.market.tradableInstrument.instrument.name;\n      obj.baseName = tickers.market.tradableInstrument.instrument.baseName;\n      obj.quoteName = tickers.market.tradableInstrument.instrument.quoteName; // // console.log(obj);\n\n      this.tickers.unshift(obj);\n\n      if (this.tickers.length > 15) {\n        this.tickers.pop();\n      }\n    } // toggle(e) {\n    //   e.preventDefault();\n    //   this.toggleOn = !this.toggleOn;\n    //   e.target.innerHTML = e.target.innerHTML === 'Fees Off' ? 'Fees On' : 'Fees Off';\n    // },\n\n\n  }\n};",{"version":3,"sources":["Ticker.vue"],"names":[],"mappings":"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","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n// import VegaProtocolService from '@/services/VegaProtocolService';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\n\nconst LIVE_TICKERS = gql`\nsubscription {\n  marketData  {\n    market {\n      id\n      name\n      tradableInstrument {\n        instrument {\n          name \n          baseName\n          quoteName\n        }    \n      }\n    }\n    bestBidPrice\n    bestOfferPrice\n    midPrice\n  }\n}`;\n\nexport default {\n  name: 'ticker',\n  components: {\n    Spinner,\n  },\n\n  data() {\n    return {\n      tickerObj: {},\n      tickers: [],\n      snapTaken: false,\n      showLoader: false,\n      i: 0,\n    //   toggleOn: true,\n    //   toggleFees: false,\n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      tickers: {\n        query: LIVE_TICKERS,\n        result(data) {\n          let tickers = data.data.marketData;\n          (this.i)++;\n          // // console.log(tickers);\n          setTimeout(() => {\n            this.addnewTicker(tickers);\n          },(this.i*1000 + 1000)); \n        }, \n      },\n    },\n  },\n\n  created() {\n    if (JSON.stringify(this.$store.state.tickerData) == '{}') { //Showing loader initially when page loaded\n      this.showLoader = true;\n    }\n    setTimeout(() => {this.showLoader = false;}, 3000);\n  },\n\n  methods: {\n    tickerClick(ticker) {\n      let selectedMarket = {'Name':ticker.markName,'Id':ticker.markId,};\n      let selectedMarketTrade = {'Name':ticker.markName,'Id':ticker.markId,'baseName':ticker.baseName,'quoteName':ticker.quoteName,'summary':ticker.summary,};\n      // console.log(selectedMarket);\n      this.$store.commit('changeSelectedVegaMarket', selectedMarket );      \n      this.$store.commit('changeSelectedVegaMarketSummary', ticker.summary);\n      this.$store.commit('changeSelectedVegaMarketbaseName', ticker.baseName);      \n      this.$store.commit('changeSelectedVegaMarketquoteName', ticker.quoteName);      \n      this.$store.commit('changeSelectedVegaMarketTrade', selectedMarketTrade );        //Used for trade Tab\n      this.$store.commit('changeSelectedVegaMarketNameTrade', ticker.markName );  //Name change (eq - ETHVUSD/DEC20)\n      this.$store.commit('changeSelectedVegaMarketTradeId', ticker.markId);   //Selected market in TradeTab - ID Change\n      this.$store.commit('changeSelectedVegaMarketbaseNameTrade', ticker.baseName);\n      this.$store.commit('changeSelectedVegaMarketquoteNameTrade', ticker.quoteName );\n      this.$store.commit('changeSelectedVegaMarketSummaryTrade',ticker.summary);\n\n      ExchangeDataEventBus.$emit('change-vega-market', selectedMarket);      \n      ExchangeDataEventBus.$emit('change-vega-header', {'Name':ticker.markName,'Summary':ticker.summary,});\n      this.$root.$emit('tickerClicked');\n    },\n\n    addnewTicker(tickers) {\n      let obj = [];\n      obj.markId = tickers.market.id;\n      obj.markName = tickers.market.name;\n      obj.bid = (Number(tickers.bestBidPrice)/100000).toFixed(5);\n      obj.ask = (Number(tickers.bestOfferPrice)/100000).toFixed(5);\n      obj.mid = (Number(tickers.midPrice)/1000).toFixed(5);\n      obj.summary = tickers.market.tradableInstrument.instrument.name;\n      obj.baseName = tickers.market.tradableInstrument.instrument.baseName;\n      obj.quoteName = tickers.market.tradableInstrument.instrument.quoteName;\n      // // console.log(obj);\n      this.tickers.unshift(obj);\n      if(this.tickers.length > 15) {\n        this.tickers.pop();\n      }\n    },\n\n    // toggle(e) {\n    //   e.preventDefault();\n    //   this.toggleOn = !this.toggleOn;\n    //   e.target.innerHTML = e.target.innerHTML === 'Fees Off' ? 'Fees On' : 'Fees Off';\n    // },\n  },\n\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\" scoped></style>\n\n"],"sourceRoot":"src/components/Landing/MarketView/TradePane/Ticker"}]}