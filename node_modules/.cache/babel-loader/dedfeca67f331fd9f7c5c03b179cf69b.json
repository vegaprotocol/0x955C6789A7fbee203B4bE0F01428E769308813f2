{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/eslint-loader/index.js??ref--13-0!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/services/Vega-WalletService.js","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/services/Vega-WalletService.js","mtime":1595618551943},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport LocalStorage, { VegaKeys } from '../utils/localStorage';\n\nclass VegaWalletService {\n  async loginToVega(name, key, pass_) {\n    let obj = {\n      'wallet': key,\n      'passphrase': pass_\n    }; // console.log(obj);\n\n    try {\n      const res = await axios.post('https://wallet.n.vega.xyz/api/v1/auth/token', obj); // console.log(res);\n\n      if (res.status === 200) {\n        // console.log('===200');\n        // console.log(res.status, res.data.token);\n        VegaKeys.name = name;\n        VegaKeys.token = res.data.token; // console.log('VEGA KEYS  ', VegaKeys.name, VegaKeys.token);\n\n        const pub_res = await this.getPubKeys(obj.pass); // console.log('response from pub_res call ' + pub_res);\n\n        if (pub_res.status === 200) {\n          return {\n            status: 200,\n            msg: 'Login Successful - Welcome ' + name\n          };\n        } else {\n          return {\n            status: 200,\n            msg: 'Login Successful, but PubKeys couldn\\'t be generated. Please try again.'\n          };\n        }\n      } else {\n        return {\n          status: 400,\n          msg: 'Login Failed : Wallet-Passphrase pair Incorrect.'\n        };\n      }\n    } catch (error) {\n      // console.log(JSON.stringify(error));\n      return {\n        status: 400,\n        msg: 'Login Failed : Wallet-Passphrase pair Incorrect.'\n      };\n    }\n  }\n\n  async logoutfromVega() {\n    if (!VegaKeys.token) {\n      // console.log('logged out');\n      return 'User already Logged Out.';\n    }\n\n    const _header = 'Bearer ' + VegaKeys.token;\n\n    try {\n      const res = await axios.delete('https://wallet.n.vega.xyz/api/v1/auth/token', {\n        headers: {\n          Authorization: _header\n        }\n      }); // console.log(res);\n\n      if (res.status == 200) {\n        LocalStorage.clearVegaSession(); // console.log('status: 200, msg: \\'User Successfully Logged Out.\\',');\n\n        return {\n          status: 200,\n          msg: 'User Successfully Logged Out.'\n        };\n      } else {\n        // console.log('status: 400, msg: \\'Something went wrong. Please try again..\\',');\n        return {\n          status: 400,\n          msg: 'Something went wrong. Please try again.'\n        };\n      }\n    } catch (error) {\n      // console.log(JSON.stringify(error));\n      // console.log('status: 400, msg: \\'Something went wrong. Please try again..\\',');\n      return {\n        status: 400,\n        msg: 'Something went wrong. Server returned error. Please try again.'\n      };\n    }\n  }\n\n  async getPubKeys(pass) {\n    const _header = 'Bearer ' + VegaKeys.token; // console.log(_header);\n\n\n    try {\n      const res = await axios.get('https://wallet.n.vega.xyz/api/v1/keys', {\n        headers: {\n          Authorization: _header\n        }\n      }); // console.log(res);\n\n      if (res.status == 200) {\n        let count = Object.keys(res.data.keys).length; //number of keys\n        // console.log('count ' + count);\n\n        if (count <= 1) {\n          //if no key available\n          const gen = await this.generatenewPubKeys(pass); // console.log(gen);\n\n          return gen;\n        } else {\n          for (let i = 0; i < count; i++) {\n            let obj = res.data.keys[i]; //individual key assigned to obj\n            // console.log(i + '  -  ' + obj.pub);\n\n            VegaKeys.pubKeys.push(obj.pub);\n          }\n\n          VegaKeys.currentActiveKey = VegaKeys.pubKeys[0]; // console.log('VegaKeys.pubKeys ' + VegaKeys.pubKeys);\n        } // console.log('PubKeys retrieved Successfully.');\n\n\n        return {\n          status: 200,\n          msg: 'PubKeys retrieved Successfully.'\n        };\n      } else {\n        // console.log('Something went wrong. Couldn\\'t retrieve PubKeys.');\n        return {\n          status: 400,\n          msg: 'Something went wrong. Couldn\\'t retrieve PubKeys.'\n        };\n      }\n    } catch (error) {\n      // console.log(JSON.stringify(error));\n      return {\n        status: 400,\n        msg: 'Something went wrong. Server returned error when fetching PubKeys.'\n      };\n    }\n  }\n\n  async generatenewPubKeys(pass) {\n    const _header = 'Bearer ' + VegaKeys.token;\n\n    let data = {\n      'passphrase': pass,\n      'meta': [{\n        'key': 'somekey',\n        'value': 'somevalue'\n      }]\n    }; // console.log(data);\n\n    const res = await axios.post('https://wallet.n.vega.xyz/api/v1/keys', data, {\n      headers: {\n        Authorization: _header\n      }\n    }); // console.log(res);\n\n    try {\n      if (res.status == 200) {\n        VegaKeys.pubKeys.push(res.data.key.pub);\n        VegaKeys.currentActiveKey = res.data.key.pub; // console.log('New PubKey generated successfully ' + VegaKeys.pubKeys);\n\n        return {\n          status: 200,\n          msg: 'New PubKey generated successfully'\n        };\n      } else {\n        // console.log('Something went wrong. Couldn\\'t generate new PubKey');\n        return {\n          status: 400,\n          msg: 'Something went wrong. Couldn\\'t generate new PubKey'\n        };\n      }\n    } catch (error) {\n      // console.log(JSON.stringify(error));\n      return {\n        status: 400,\n        msg: 'Something went wrong. Couldn\\'t generate new PubKey'\n      };\n    }\n  }\n\n}\n\nexport default new VegaWalletService();",{"version":3,"sources":["/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/services/Vega-WalletService.js"],"names":["axios","LocalStorage","VegaKeys","VegaWalletService","loginToVega","name","key","pass_","obj","res","post","status","token","data","pub_res","getPubKeys","pass","msg","error","logoutfromVega","_header","delete","headers","Authorization","clearVegaSession","get","count","Object","keys","length","gen","generatenewPubKeys","i","pubKeys","push","pub","currentActiveKey"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport LocalStorage, { VegaKeys, } from '../utils/localStorage';\n\nclass VegaWalletService {\n\n\n  async loginToVega(name, key, pass_) {\n    let obj = { 'wallet': key, 'passphrase': pass_, };\n    // console.log(obj);\n    try {\n      const res = await axios.post('https://wallet.n.vega.xyz/api/v1/auth/token', obj);\n      // console.log(res);\n\n      if (res.status === 200) {\n        // console.log('===200');\n        // console.log(res.status, res.data.token);\n        VegaKeys.name = name;\n        VegaKeys.token = res.data.token;\n        // console.log('VEGA KEYS  ', VegaKeys.name, VegaKeys.token);\n\n        const pub_res = await this.getPubKeys(obj.pass);\n        // console.log('response from pub_res call ' + pub_res);\n        if (pub_res.status === 200) {\n          return { status: 200, msg: 'Login Successful - Welcome ' + name, };\n        }\n        else {\n          return { status: 200, msg: 'Login Successful, but PubKeys couldn\\'t be generated. Please try again.', };\n        }\n      }\n      else {\n        return { status: 400, msg: 'Login Failed : Wallet-Passphrase pair Incorrect.', };\n      }\n    }\n    catch (error) {\n      // console.log(JSON.stringify(error));\n      return { status: 400, msg: 'Login Failed : Wallet-Passphrase pair Incorrect.', };\n    }\n  }\n\n\n  async logoutfromVega() {\n    if (!VegaKeys.token) {\n      // console.log('logged out');\n      return 'User already Logged Out.';\n    }\n    const _header = 'Bearer ' + VegaKeys.token;\n    try {\n      const res = await axios.delete('https://wallet.n.vega.xyz/api/v1/auth/token', { headers: { Authorization: _header, }, });\n      // console.log(res);\n\n      if (res.status == 200) {\n        LocalStorage.clearVegaSession();\n        // console.log('status: 200, msg: \\'User Successfully Logged Out.\\',');\n        return { status: 200, msg: 'User Successfully Logged Out.', };\n      }\n      else {\n        // console.log('status: 400, msg: \\'Something went wrong. Please try again..\\',');\n        return { status: 400, msg: 'Something went wrong. Please try again.', };\n      }\n    }\n    catch (error) {\n      // console.log(JSON.stringify(error));\n      // console.log('status: 400, msg: \\'Something went wrong. Please try again..\\',');\n      return { status: 400, msg: 'Something went wrong. Server returned error. Please try again.', };\n    }\n\n  }\n\n\n  async getPubKeys(pass) {\n    const _header = 'Bearer ' + VegaKeys.token;\n    // console.log(_header);\n    try {\n      const res = await axios.get('https://wallet.n.vega.xyz/api/v1/keys', { headers: { Authorization: _header, }, });\n      // console.log(res);\n\n      if (res.status == 200) {\n        let count = Object.keys(res.data.keys).length;     //number of keys\n        // console.log('count ' + count);\n\n        if (count <= 1) {                              //if no key available\n          const gen = await this.generatenewPubKeys(pass);\n          // console.log(gen);\n          return gen;\n        }\n        else {\n          for (let i = 0; i < count; i++) {\n            let obj = res.data.keys[i];                 //individual key assigned to obj\n            // console.log(i + '  -  ' + obj.pub);\n            VegaKeys.pubKeys.push(obj.pub);\n          }\n          VegaKeys.currentActiveKey = VegaKeys.pubKeys[0];\n          // console.log('VegaKeys.pubKeys ' + VegaKeys.pubKeys);\n        }\n\n        // console.log('PubKeys retrieved Successfully.');\n        return { status: 200, msg: 'PubKeys retrieved Successfully.', };\n      }\n      else {\n        // console.log('Something went wrong. Couldn\\'t retrieve PubKeys.');\n        return { status: 400, msg: 'Something went wrong. Couldn\\'t retrieve PubKeys.', };\n      }\n    }\n    catch (error) {\n      // console.log(JSON.stringify(error));\n      return { status: 400, msg: 'Something went wrong. Server returned error when fetching PubKeys.', };\n    }\n  }\n\n\n  async generatenewPubKeys(pass) {\n\n    const _header = 'Bearer ' + VegaKeys.token;\n    let data = { 'passphrase': pass, 'meta': [{ 'key': 'somekey', 'value': 'somevalue', },], };\n    // console.log(data);\n    const res = await axios.post('https://wallet.n.vega.xyz/api/v1/keys', data, { headers: { Authorization: _header, }, });\n    // console.log(res);\n    try {\n      if (res.status == 200) {\n        VegaKeys.pubKeys.push(res.data.key.pub);\n        VegaKeys.currentActiveKey = res.data.key.pub;\n        // console.log('New PubKey generated successfully ' + VegaKeys.pubKeys);\n        return { status: 200, msg: 'New PubKey generated successfully', };\n      }\n      else {\n        // console.log('Something went wrong. Couldn\\'t generate new PubKey');\n        return { status: 400, msg: 'Something went wrong. Couldn\\'t generate new PubKey', };\n      }\n    }\n    catch (error) {\n      // console.log(JSON.stringify(error));\n      return { status: 400, msg: 'Something went wrong. Couldn\\'t generate new PubKey', };\n    }\n  }\n\n}\n\nexport default new VegaWalletService();\n"]}]}