{"remainingRequest":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Downloads/cryptowhaler/node_modules/eslint-loader/index.js??ref--13-0!/Users/chrismoores/Downloads/cryptowhaler/src/plugins/notifications.js","dependencies":[{"path":"/Users/chrismoores/Downloads/cryptowhaler/src/plugins/notifications.js","mtime":1595121760000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport VueNotifications from 'vue-notifications';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction toast({\n  title,\n  message,\n  type,\n  timeout\n}) {\n  if (type === VueNotifications.types.warn) type = 'warning';\n  return iziToast[type]({\n    title,\n    message,\n    timeout\n  });\n}\n\nconst options = {\n  success: toast,\n  error: toast,\n  info: toast,\n  warn: toast\n};\nVue.use(VueNotifications, options);\nconst notificationComponent = new Vue({\n  name: 'MyComponent',\n  notifications: {\n    showSuccessMsg: {\n      type: VueNotifications.types.success,\n      title: 'Success',\n      message: 'It worked!'\n    },\n    showInfoMsg: {\n      type: VueNotifications.types.info,\n      title: 'Info',\n      message: 'Nice to meet you.'\n    },\n    showWarnMsg: {\n      type: VueNotifications.types.warn,\n      title: 'Warning',\n      message: 'BEWARE'\n    },\n    showErrorMsg: {\n      type: VueNotifications.types.error,\n      title: 'Error',\n      message: 'Something went wrong.'\n    }\n  }\n});\nexport default {\n  install(Vue) {\n    Vue.prototype.$showSuccessMsg = ({\n      title,\n      message,\n      timeout\n    } = {}) => {\n      return notificationComponent.showSuccessMsg(JSON.parse(JSON.stringify({\n        title,\n        message,\n        timeout: timeout || 20000\n      })));\n    };\n\n    Vue.prototype.$showInfoMsg = ({\n      title,\n      message,\n      timeout\n    } = {}) => {\n      return notificationComponent.showInfoMsg(JSON.parse(JSON.stringify({\n        title,\n        message,\n        timeout: timeout || 20000\n      })));\n    };\n\n    Vue.prototype.$showWarningMsg = ({\n      title,\n      message,\n      timeout\n    } = {}) => {\n      return notificationComponent.showWarnMsg(JSON.parse(JSON.stringify({\n        title,\n        message,\n        timeout: timeout || 20000\n      })));\n    };\n\n    Vue.prototype.$showErrorMsg = ({\n      title,\n      message,\n      timeout\n    } = {}) => {\n      return notificationComponent.showErrorMsg(JSON.parse(JSON.stringify({\n        title,\n        message,\n        timeout: timeout || 20000\n      })));\n    };\n  }\n\n};",{"version":3,"sources":["/Users/chrismoores/Downloads/cryptowhaler/src/plugins/notifications.js"],"names":["Vue","VueNotifications","iziToast","toast","title","message","type","timeout","types","warn","options","success","error","info","use","notificationComponent","name","notifications","showSuccessMsg","showInfoMsg","showWarnMsg","showErrorMsg","install","prototype","$showSuccessMsg","JSON","parse","stringify","$showInfoMsg","$showWarningMsg","$showErrorMsg"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport VueNotifications from 'vue-notifications';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction toast({ title, message, type, timeout, }) {\n  if (type === VueNotifications.types.warn) type = 'warning';\n  return iziToast[type]({ title, message, timeout, });\n}\n\nconst options = {\n  success: toast,\n  error: toast,\n  info: toast,\n  warn: toast,\n};\n\nVue.use(VueNotifications, options);\n\nconst notificationComponent = new Vue({\n  name: 'MyComponent',\n  notifications: {\n    showSuccessMsg: {\n      type: VueNotifications.types.success,\n      title: 'Success',\n      message: 'It worked!',\n    },\n    showInfoMsg: {\n      type: VueNotifications.types.info,\n      title: 'Info',\n      message: 'Nice to meet you.',\n    },\n    showWarnMsg: {\n      type: VueNotifications.types.warn,\n      title: 'Warning',\n      message: 'BEWARE',\n    },\n    showErrorMsg: {\n      type: VueNotifications.types.error,\n      title: 'Error',\n      message: 'Something went wrong.',\n    },\n  },\n});\n\nexport default {\n  install(Vue) {\n    Vue.prototype.$showSuccessMsg = ({ title, message, timeout, } = {}) => {\n      return notificationComponent.showSuccessMsg(\n        JSON.parse(\n          JSON.stringify({\n            title,\n            message,\n            timeout: timeout || 20000,\n          })\n        )\n      );\n    };\n\n    Vue.prototype.$showInfoMsg = ({ title, message, timeout, } = {}) => {\n      return notificationComponent.showInfoMsg(\n        JSON.parse(\n          JSON.stringify({\n            title,\n            message,\n            timeout: timeout || 20000,\n          })\n        )\n      );\n    };\n\n    Vue.prototype.$showWarningMsg = ({ title, message, timeout, } = {}) => {\n      return notificationComponent.showWarnMsg(\n        JSON.parse(\n          JSON.stringify({\n            title,\n            message,\n            timeout: timeout || 20000,\n          })\n        )\n      );\n    };\n\n    Vue.prototype.$showErrorMsg = ({ title, message, timeout, } = {}) => {\n      return notificationComponent.showErrorMsg(\n        JSON.parse(\n          JSON.stringify({\n            title,\n            message,\n            timeout: timeout || 20000,\n          })\n        )\n      );\n    };\n  },\n};\n"]}]}