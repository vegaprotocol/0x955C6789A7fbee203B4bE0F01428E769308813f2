{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/HeaderSection/HeaderSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/HeaderSection/HeaderSection.vue","mtime":1595618551636},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\nimport { ModelSelect } from 'vue-search-select';\nimport EventBus, { EventNames } from '@/eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\nimport { VegaKeys } from '../../utils/localStorage';\nexport default {\n  name: 'header-section',\n\n  data() {\n    return {\n      status: 'Major Outage',\n      serverStatusCode: 'major_outage',\n      vegaSelectedMarketName: this.$store.getters.selectedVegaMarketName,\n      vegaMarketSummary: this.$store.getters.selectedVegaMarketSummary\n    };\n  },\n\n  components: {\n    ModelSelect\n  },\n  methods: {\n    onTriggerClick() {\n      this.$store.commit('toggleSidebar');\n    },\n\n    getServerStatus() {\n      let data = this.$store.getters.isLoggedIn; // console.log(data);\n\n      if (data) {\n        this.serverStatusCode = 'Logged in as ' + VegaKeys.name;\n        return this.serverStatusCode;\n      } else {\n        this.serverStatusCode = 'Logged Out';\n        return this.serverStatusCode;\n      }\n    },\n\n    logout() {\n      EventBus.$emit(EventNames.userLogout);\n      this.$showSuccessMsg({\n        message: 'Logged Out Successfully'\n      });\n    },\n\n    showDepositModal() {\n      this.$store.commit('closeSidebar');\n      this.$emit('show-deposit-modal');\n    },\n\n    showWithdrawlModal() {\n      this.$store.commit('closeSidebar');\n      this.$emit('show-withdrawl-modal');\n    },\n\n    showLoginModal() {\n      //Added\n      this.$store.commit('closeSidebar');\n      this.$emit('show-login-modal');\n    },\n\n    showLogoutModal() {\n      //Added\n      this.$store.commit('closeSidebar');\n      this.$emit('show-logout-modal');\n    }\n\n  },\n\n  created() {\n    this.changeVegaHeader = newMarket => {\n      //Changing Selected Vega Market\n      this.vegaSelectedMarketName = newMarket.Name;\n      this.vegaMarketSummary = newMarket.Summary;\n    };\n\n    ExchangeDataEventBus.$on('change-vega-header', this.changeVegaHeader);\n  },\n\n  destroyed() {\n    ExchangeDataEventBus.$on('change-vega-header', this.changeVegaHeader);\n  }\n\n};",{"version":3,"sources":["HeaderSection.vue"],"names":[],"mappings":";;AAGA,SAAA,WAAA,QAAA,mBAAA;AACA,OAAA,QAAA,IAAA,UAAA,QAAA,sBAAA;AACA,OAAA,oBAAA,MAAA,2BAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,cADA;AAEA,MAAA,gBAAA,EAAA,cAFA;AAGA,MAAA,sBAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,sBAHA;AAIA,MAAA,iBAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA;AAJA,KAAA;AAMA,GATA;;AAUA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAVA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA;AACA,KAHA;;AAKA,IAAA,eAAA,GAAA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CADA,CAEA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,gBAAA,GAAA,kBAAA,QAAA,CAAA,IAAA;AACA,eAAA,KAAA,gBAAA;AACA,OAHA,MAIA;AACA,aAAA,gBAAA,GAAA,YAAA;AACA,eAAA,KAAA,gBAAA;AACA;AACA,KAhBA;;AAiBA,IAAA,MAAA,GAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA;AACA,WAAA,eAAA,CAAA;AACA,QAAA,OAAA,EAAA;AADA,OAAA;AAGA,KAtBA;;AAuBA,IAAA,gBAAA,GAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,WAAA,KAAA,CAAA,oBAAA;AACA,KA1BA;;AA2BA,IAAA,kBAAA,GAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,WAAA,KAAA,CAAA,sBAAA;AACA,KA9BA;;AA+BA,IAAA,cAAA,GAAA;AAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,WAAA,KAAA,CAAA,kBAAA;AACA,KAlCA;;AAmCA,IAAA,eAAA,GAAA;AAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,WAAA,KAAA,CAAA,mBAAA;AACA;;AAtCA,GAbA;;AAuDA,EAAA,OAAA,GAAA;AACA,SAAA,gBAAA,GAAA,SAAA,IAAA;AAAA;AACA,WAAA,sBAAA,GAAA,SAAA,CAAA,IAAA;AACA,WAAA,iBAAA,GAAA,SAAA,CAAA,OAAA;AACA,KAHA;;AAIA,IAAA,oBAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,KAAA,gBAAA;AACA,GA7DA;;AA+DA,EAAA,SAAA,GAAA;AACA,IAAA,oBAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,KAAA,gBAAA;AACA;;AAjEA,CAAA","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport { ModelSelect, } from 'vue-search-select';\nimport EventBus, { EventNames, } from '@/eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\nimport { VegaKeys, } from '../../utils/localStorage';\n\n\nexport default {\n  name: 'header-section',\n  data() {\n    return {\n      status: 'Major Outage',\n      serverStatusCode: 'major_outage',\n      vegaSelectedMarketName: this.$store.getters.selectedVegaMarketName,\n      vegaMarketSummary: this.$store.getters.selectedVegaMarketSummary,\n    };\n  },\n  components: {\n    ModelSelect,\n  },\n  methods: {\n    onTriggerClick() {\n      this.$store.commit('toggleSidebar');\n    },\n\n    getServerStatus() {\n      let data = this.$store.getters.isLoggedIn;\n      // console.log(data);\n      if (data) {\n        this.serverStatusCode = 'Logged in as ' + VegaKeys.name;\n        return this.serverStatusCode;\n      }\n      else{\n        this.serverStatusCode = 'Logged Out';\n        return this.serverStatusCode;\n      }\n    },\n    logout() {\n      EventBus.$emit(EventNames.userLogout);\n      this.$showSuccessMsg({\n        message: 'Logged Out Successfully',\n      });\n    },\n    showDepositModal() {\n      this.$store.commit('closeSidebar');\n      this.$emit('show-deposit-modal');\n    },\n    showWithdrawlModal() {\n      this.$store.commit('closeSidebar');\n      this.$emit('show-withdrawl-modal');\n    },\n    showLoginModal() {        //Added\n      this.$store.commit('closeSidebar');\n      this.$emit('show-login-modal');\n    },\n    showLogoutModal() {     //Added\n      this.$store.commit('closeSidebar');\n      this.$emit('show-logout-modal');\n    },\n  },\n\n\n  created() {\n    this.changeVegaHeader = (newMarket) => {       //Changing Selected Vega Market\n      this.vegaSelectedMarketName = newMarket.Name;\n      this.vegaMarketSummary = newMarket.Summary;\n    };\n    ExchangeDataEventBus.$on('change-vega-header', this.changeVegaHeader);    \n  }, \n\n  destroyed() {\n    ExchangeDataEventBus.$on('change-vega-header', this.changeVegaHeader);    \n  },\n\n\n\n\n\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\" scoped></style>\n"],"sourceRoot":"src/components/HeaderSection"}]}