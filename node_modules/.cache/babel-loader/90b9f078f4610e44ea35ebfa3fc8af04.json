{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/eslint-loader/index.js??ref--13-0!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/store.js","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/store.js","mtime":1595618551625},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { dateToDisplayTime } from '@/utils/utility'; // import { SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION } from \"constants\";\n\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    themeMode: 'default',\n    theme: {\n      'default': {\n        'main-bg-color': '#0e1e23',\n        'header-bg-color': '#203238',\n        'header-border-color': '#415b62',\n        'tab-button-background-color': '#39545d',\n        'primary-text-color': '#ffffff',\n        'miner-sub-text-color': '#909ca0',\n        'mobile-bg-color': '#edba9f',\n        'green-color': '#5fd66a',\n        'red-color': '#ff5353',\n        'sec-mobile-bg-color': '#b37863',\n        'pri-label-color': '#879fad',\n        'just-black ': '#000000',\n        'placeholder-color': '#999999',\n        'border-bottom-color': '#1e2c31',\n        'border-right-color ': '#445f66',\n        'tab-color': '#38545d',\n        'silder-bg-color': '#d3d3d3,',\n        'secondary-modal-bg-color': '#0F1E23',\n        'container-bg-color': '#121E22'\n      }\n    },\n    username: null,\n    //Added\n    ledger: [],\n    websocketStatus: 'Closed',\n    activeOrders: [],\n    //handles orders\n    recentTrades: [],\n    //handles recent trades\n    loaderCounter: 0,\n    markets: [],\n    //added\n    mappedMarkets: new Map(),\n    //Added (mapped by ID)\n    mappedMarketsbyName: new Map(),\n    //Added (mapped by name)\n    loaderCancellable: false,\n    isLoggedIn: true,\n    sidebarOpen: false,\n    tradePaneClosed: false,\n    bookPaneClosed: false,\n    liveTradePrice: 1,\n    tickerCache: {},\n    priceAnalysisSnapShot: {},\n    selectedPair: 'BTC/USD',\n    pubkeysArray: [],\n    selectedVegaMarketName: 'ETHBTC/DEC20',\n    //Added\n    selectedVegaMarketId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN',\n    //Added\n    selectedVegaMarketSummary: 'December 2020 ETH vs BTC future',\n    //Added\n    selectedVegaMarketbaseName: 'ETHBTC',\n    //Added\n    selectedVegaMarketquoteName: 'BTC',\n    //Added\n    selectedVegaMarketTradeId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN',\n    //Added\n    selectedVegaMarketNameTrade: 'ETHBTC/DEC20',\n    //Added\n    selectedVegaMarketSummaryTrade: 'December 2020 ETH vs BTC future',\n    //Added\n    selectedVegaMarketbaseNameTrade: 'ETHBTC',\n    //Added\n    selectedVegaMarketquoteNameTrade: 'BTC',\n    //Added\n    totalRealizedPNL_VUSD: 0,\n    //Realized PNL\n    totalUnrealizedPNL_VUSD: 0,\n    //Unrealized PNL\n    totalRealizedPNL_BTC: 0,\n    //Realized PNL\n    totalUnrealizedPNL_BTC: 0,\n    //Unrealized PNL\n    // totalRealizedPNL: 0,\n    selectedExchange: 'bitfinex',\n    supportedPairs: [],\n    totalPortfolioValue: 0,\n    tpvCurrency: 'USD',\n    limitTab: false,\n    marketIOCTab: true,\n    //Added\n    limitGTCTab: false,\n    //Added\n    limitFOKTab: false,\n    //Added\n    limitIOCTab: false,\n    //Added\n    tickerData: {},\n    availablePairs: [],\n    buyPrice: 0,\n    sellPrice: 0,\n    precision: 0.0001\n  },\n  getters: {\n    username(state) {\n      //Added\n      return state.username;\n    },\n\n    websocketStatus(state) {\n      return state.websocketStatus;\n    },\n\n    themeMode(state) {\n      return state.themeMode;\n    },\n\n    limitTab(state) {\n      return state.limitTab;\n    },\n\n    marketIOCTab(state) {\n      //Added\n      return state.marketIOCTab;\n    },\n\n    limitGTCTab(state) {\n      //Added\n      return state.limitGTCTab;\n    },\n\n    limitFOKTab(state) {\n      //Added\n      return state.limitFOKTab;\n    },\n\n    limitIOCTab(state) {\n      //Added\n      return state.limitIOCTab;\n    },\n\n    supportedPairs(state) {\n      return [...new Set(state.supportedPairs)];\n    },\n\n    selectedPair(state) {\n      return state.selectedPair;\n    },\n\n    selectedVegaMarket(state) {\n      //Added\n      return {\n        'selectedVegaMarketName': state.selectedVegaMarketName,\n        'selectedVegaMarketId': state.selectedVegaMarketName\n      };\n    },\n\n    selectedVegaMarketName(state) {\n      //Added\n      return state.selectedVegaMarketName;\n    },\n\n    pubkeysArray(state) {\n      //returns array having pubkeys\n      return state.pubkeysArray;\n    },\n\n    selectedVegaMarketId(state) {\n      //Added\n      return state.selectedVegaMarketId;\n    },\n\n    selectedVegaMarketSummary(state) {\n      //Added\n      return state.selectedVegaMarketSummary;\n    },\n\n    selectedVegaMarketbaseName(state) {\n      //Added\n      return state.selectedVegaMarketbaseName;\n    },\n\n    selectedVegaMarketquoteName(state) {\n      //Added\n      return state.selectedVegaMarketquoteName;\n    },\n\n    selectedVegaMarketNameTrade(state) {\n      //Added\n      return state.selectedVegaMarketNameTrade;\n    },\n\n    selectedVegaMarketTradeId(state) {\n      //Added\n      return state.selectedVegaMarketTradeId;\n    },\n\n    selectedVegaMarketSummaryTrade(state) {\n      //Added\n      return state.selectedVegaMarketSummaryTrade;\n    },\n\n    selectedVegaMarketbaseNameTrade(state) {\n      //Added\n      return state.selectedVegaMarketbaseNameTrade;\n    },\n\n    selectedVegaMarketquoteNameTrade(state) {\n      //Added\n      return state.selectedVegaMarketquoteNameTrade;\n    },\n\n    isLoggedIn(state) {\n      return state.isLoggedIn;\n    },\n\n    currentTime() {\n      return dateToDisplayTime();\n    },\n\n    ledger(state) {\n      return state.ledger;\n    },\n\n    activeOrders(state) {\n      //returns activeOrders\n      return state.activeOrders;\n    },\n\n    markets(state) {\n      //Added. Should store markets data\n      return state.markets;\n    },\n\n    mappedMarkets(state) {\n      //Added. Should store markets data\n      return state.mappedMarkets;\n    },\n\n    mappedMarketsbyName(state) {\n      //Added. Should store markets data\n      return state.mappedMarketsbyName;\n    },\n\n    recentTrades(state) {\n      //gets recent trades\n      return state.recentTrades;\n    },\n\n    totalUnrealizedPNL_VUSD(state) {\n      //totalUnrealizedPNL \n      return state.totalUnrealizedPNL_VUSD;\n    },\n\n    totalRealizedPNL_VUSD(state) {\n      //totalRealizedPNL\n      return state.totalRealizedPNL_VUSD;\n    },\n\n    totalUnrealizedPNL_BTC(state) {\n      //totalUnrealizedPNL \n      return state.totalUnrealizedPNL_BTC;\n    },\n\n    totalRealizedPNL_BTC(state) {\n      //totalRealizedPNL\n      return state.totalRealizedPNL_BTC;\n    },\n\n    showLoader(state) {\n      return state > 0;\n    },\n\n    loaderCancellable(state) {\n      return state.loaderCancellable;\n    },\n\n    sidebarOpen(state) {\n      return state.sidebarOpen;\n    },\n\n    liveTradePrice(state) {\n      return state.liveTradePrice;\n    },\n\n    tickerCache(state) {\n      return state.tickerCache;\n    },\n\n    priceAnalysisSnapShot(state) {\n      return state.priceAnalysisSnapShot;\n    },\n\n    selectedExchange(state) {\n      return state.selectedExchange;\n    },\n\n    formattedSelectedExchange(state) {\n      switch (state.selectedExchange) {\n        case 'vegaProtocol':\n          return 'vegaProtocol';\n\n        default:\n          return state.selectedExchange.charAt(0).toUpperCase() + state.selectedExchange.slice(1);\n      }\n    },\n\n    getTickerData(state) {\n      return state.tickerData;\n    },\n\n    getccTickerData(state) {\n      return state.tickerData[state.selectedPair.split('/')[0]][state.selectedPair].exchanges;\n    },\n\n    getAvailablePairs(state) {\n      return state.availablePairs;\n    },\n\n    buyPrice(state) {\n      return state.buyPrice;\n    },\n\n    sellPrice(state) {\n      return state.sellPrice;\n    },\n\n    precisionSelectedpair(state) {\n      return state.precision;\n    }\n\n  },\n  mutations: {\n    updateusername(state, name) {\n      //Added\n      state.username = name;\n    },\n\n    changeWebsocketStatus(state, websocketStatus) {\n      state.websocketStatus = websocketStatus;\n    },\n\n    changeLimitTab(state) {\n      //Added\n      state.limitTab = true;\n    },\n\n    changeToLimitFOKTab(state) {\n      //Added\n      state.limitFOKTab = true;\n    },\n\n    changeToLimitGTCTab(state) {\n      //Added\n      state.limitGTCTab = true;\n    },\n\n    changeToLimitIOCTab(state) {\n      //Added\n      state.limitIOCTab = true;\n    },\n\n    changeMarketTab(state) {\n      //Added\n      state.limitTab = false;\n    },\n\n    totalUnrealizedPNL_VUSD(state, val) {\n      //Added\n      state.totalUnrealizedPNL_VUSD = val;\n    },\n\n    totalRealizedPNL_VUSD(state, val) {\n      //Added\n      state.totalRealizedPNL_VUSD = val;\n    },\n\n    totalUnrealizedPNL_BTC(state, val) {\n      //Added\n      state.totalUnrealizedPNL_BTC = val;\n    },\n\n    totalRealizedPNL_BTC(state, val) {\n      //Added\n      state.totalRealizedPNL_BTC = val;\n    },\n\n    changeMarketIOCTab(state) {\n      state.marketIOCTab = false;\n    },\n\n    changeMarketFOKTab(state) {\n      state.marketIOCTab = true;\n    },\n\n    isLoggedIn(state, isLoggedIn) {\n      state.isLoggedIn = isLoggedIn;\n    },\n\n    ledger(state, newLedger) {\n      state.ledger = newLedger;\n      store.commit('totalPortfolioValue');\n    },\n\n    activeOrders(state, newValue) {\n      //Replace all orders\n      state.activeOrders = newValue;\n    },\n\n    addToActiveOrders(state, newOrder) {\n      //Add new order \n      state.activeOrders.unshift(newOrder); // console.log(state.activeOrders);\n\n      if (state.activeOrders.length > 50) {\n        state.activeOrders.pop();\n      }\n    },\n\n    removeFromActiveOrders(state, orderID) {\n      for (let i = 0; i < state.activeOrders.length; i++) {\n        if (state.activeOrders[i].id == orderID) {\n          let cur = state.activeOrders[i];\n          let index = state.activeOrders.indexOf(cur); // console.log('DELETING ORDER - ' + cur + ' ' + index); \n\n          state.activeOrders.splice(index, 1); // console.log(state.activeOrders);\n        }\n      }\n    },\n\n    markets(state, newMarkets) {\n      //Added for markets. Should function properly\n      // console.log(newMarkets);\n      state.markets = newMarkets; // console.log(state.markets);\n    },\n\n    mappedMarkets(state, newMarket) {\n      //Added for markets. Should function properly\n      // console.log(newMarket);\n      state.mappedMarkets.set(newMarket.id, newMarket.data); // console.log(state.mappedMarkets);\n    },\n\n    mappedMarketsbyName(state, newMarket) {\n      //Added for markets. Should function properly\n      // console.log(newMarket);\n      state.mappedMarketsbyName.set(newMarket.data.name, newMarket); // console.log('MAPPED MARKETS BY NAME -' - state.mappedMarketsbyName);\n    },\n\n    recentTrades(state, newValue) {\n      //sets the recent trades\n      state.recentTrades = newValue;\n    },\n\n    addToRecentTrades(state, trade) {\n      //Adds new trade to recent Trades\n      state.recentTrades.unshift(trade);\n\n      if (state.recentTrades.length > 50) {\n        state.recentTrades.pop();\n      }\n    },\n\n    addLoaderTask(state, count, cancellable = false) {\n      // // console.log(count);\n      state.loaderCounter += count;\n      state.loaderCancellable = cancellable;\n    },\n\n    removeLoaderTask(state, count) {\n      // // console.log(count);\n      if (state.loaderCounter > 0) {\n        state.loaderCounter -= count;\n        state.loaderCancellable = false;\n      } else if (state.loaderCounter < 0) {\n        state.loaderCounter = 0;\n      }\n    },\n\n    toggleSidebar(state) {\n      //Disables/Enables page scroll when side-bar is loaded (mobile)\n      if (!state.sidebarOpen) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n\n    toggleTradePaneClosed(state) {\n      state.tradePaneClosed = !state.tradePaneClosed;\n    },\n\n    toggleBookPaneClosed(state) {\n      state.bookPaneClosed = !state.bookPaneClosed;\n    },\n\n    closeSidebar(state) {\n      if (!state.sidebarOpen) {\n        return;\n      }\n\n      this.commit('toggleSidebar');\n    },\n\n    liveTradePrice(state, ltp) {\n      state.liveTradePrice = ltp;\n    },\n\n    tickerCache(state, ticker) {\n      state.tickerCache = ticker;\n    },\n\n    priceAnalysisSnapShot(state, snapshot) {\n      state.priceAnalysisSnapShot = snapshot;\n    },\n\n    selectedExchange(state, exchange) {\n      state.selectedExchange = exchange;\n    },\n\n    selectedPair(state, exchange) {\n      state.selectedPair = exchange;\n    },\n\n    changeSelectedVegaMarket(state, newMarket) {\n      //ADDED\n      // console.log('In Store - ' );\n      state.selectedVegaMarketName = newMarket.Name;\n      state.selectedVegaMarketId = newMarket.Id; // console.log(typeof(newMarket.Id));\n      // console.log(state.selectedVegaMarketName + ' ' + state.selectedVegaMarketId );\n      // console.log(typeof(state.selectedVegaMarketId));\n\n      state.selectedVegaMarketId = toString(state.selectedVegaMarketId); // console.log(typeof(state.selectedVegaMarketId));\n    },\n\n    changeSelectedVegaMarketSummary(state, summary) {\n      //Added\n      state.selectedVegaMarketSummary = summary;\n    },\n\n    changeSelectedVegaMarketbaseName(state, baseName) {\n      //Added\n      state.selectedVegaMarketbaseName = baseName;\n    },\n\n    changeSelectedVegaMarketquoteName(state, quoteName) {\n      //Added\n      state.selectedVegaMarketquoteName = quoteName;\n    },\n\n    ////////////////////\n    changeSelectedVegaMarketNameTrade(state, Name) {\n      //Added (TradeTab)\n      state.selectedVegaMarketNameTrade = Name;\n    },\n\n    changeSelectedVegaMarketTradeId(state, Id) {\n      //Added (TradeTab)\n      state.selectedVegaMarketTradeId = Id;\n    },\n\n    changeSelectedVegaMarketSummaryTrade(state, summary) {\n      //Added (TradeTab)\n      state.selectedVegaMarketSummaryTrade = summary;\n    },\n\n    changeSelectedVegaMarketbaseNameTrade(state, baseName) {\n      //Added (TradeTab)\n      state.selectedVegaMarketbaseNameTrade = baseName;\n    },\n\n    changeSelectedVegaMarketquoteNameTrade(state, quoteName) {\n      //Added (TradeTab)\n      state.selectedVegaMarketquoteNameTrade = quoteName;\n    },\n\n    addSupportedPair() {// state.supportedPairs.push(pair);\n    },\n\n    totalPortfolioValue(state) {\n      state.totalPortfolioValue = state.ledger.reduce((tpv, {\n        currency,\n        total\n      }) => {\n        currency = currency.toUpperCase();\n        let sellPrice = 1;\n\n        if (currency !== state.tpvCurrency) {\n          sellPrice = (((((state.tickerData[currency] || {})[`${currency}/${state.tpvCurrency}`] || {}).best || {}).bids || {})[0] || {}).price || 0;\n        }\n\n        tpv += sellPrice * total;\n        return tpv;\n      }, 0).toFixed(3);\n    },\n\n    changeTickerData(state, data) {\n      // alert(\"change\");\n      state.tickerData = data;\n    },\n\n    changePairData(state, data) {\n      state.availablePairs = data;\n    },\n\n    buyPrice(state, price) {\n      state.buyPrice = price;\n    },\n\n    sellPrice(state, price) {\n      state.sellPrice = price;\n    },\n\n    precisionMap(state, map) {\n      state.precision = map;\n    }\n\n  },\n  actions: {\n    toggleTheme({\n      state\n    }, themeMode) {\n      state.themeMode = themeMode;\n      const themeObj = Object.keys(state.theme[themeMode]);\n\n      for (let i = 0; i < themeObj.length; i++) {\n        document.documentElement.style.setProperty(`--${themeObj[i]}`, state.theme[themeMode][themeObj[i]]);\n      }\n    }\n\n  }\n});\nexport default store;",{"version":3,"sources":["/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/store.js"],"names":["Vue","Vuex","dateToDisplayTime","use","store","Store","state","themeMode","theme","username","ledger","websocketStatus","activeOrders","recentTrades","loaderCounter","markets","mappedMarkets","Map","mappedMarketsbyName","loaderCancellable","isLoggedIn","sidebarOpen","tradePaneClosed","bookPaneClosed","liveTradePrice","tickerCache","priceAnalysisSnapShot","selectedPair","pubkeysArray","selectedVegaMarketName","selectedVegaMarketId","selectedVegaMarketSummary","selectedVegaMarketbaseName","selectedVegaMarketquoteName","selectedVegaMarketTradeId","selectedVegaMarketNameTrade","selectedVegaMarketSummaryTrade","selectedVegaMarketbaseNameTrade","selectedVegaMarketquoteNameTrade","totalRealizedPNL_VUSD","totalUnrealizedPNL_VUSD","totalRealizedPNL_BTC","totalUnrealizedPNL_BTC","selectedExchange","supportedPairs","totalPortfolioValue","tpvCurrency","limitTab","marketIOCTab","limitGTCTab","limitFOKTab","limitIOCTab","tickerData","availablePairs","buyPrice","sellPrice","precision","getters","Set","selectedVegaMarket","currentTime","showLoader","formattedSelectedExchange","charAt","toUpperCase","slice","getTickerData","getccTickerData","split","exchanges","getAvailablePairs","precisionSelectedpair","mutations","updateusername","name","changeWebsocketStatus","changeLimitTab","changeToLimitFOKTab","changeToLimitGTCTab","changeToLimitIOCTab","changeMarketTab","val","changeMarketIOCTab","changeMarketFOKTab","newLedger","commit","newValue","addToActiveOrders","newOrder","unshift","length","pop","removeFromActiveOrders","orderID","i","id","cur","index","indexOf","splice","newMarkets","newMarket","set","data","addToRecentTrades","trade","addLoaderTask","count","cancellable","removeLoaderTask","toggleSidebar","document","body","classList","add","remove","toggleTradePaneClosed","toggleBookPaneClosed","closeSidebar","ltp","ticker","snapshot","exchange","changeSelectedVegaMarket","Name","Id","toString","changeSelectedVegaMarketSummary","summary","changeSelectedVegaMarketbaseName","baseName","changeSelectedVegaMarketquoteName","quoteName","changeSelectedVegaMarketNameTrade","changeSelectedVegaMarketTradeId","changeSelectedVegaMarketSummaryTrade","changeSelectedVegaMarketbaseNameTrade","changeSelectedVegaMarketquoteNameTrade","addSupportedPair","reduce","tpv","currency","total","best","bids","price","toFixed","changeTickerData","changePairData","precisionMap","map","actions","toggleTheme","themeObj","Object","keys","documentElement","style","setProperty"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport {\n  dateToDisplayTime,\n} from '@/utils/utility';\n// import { SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION } from \"constants\";\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n  state: {\n    themeMode: 'default',\n    theme: {\n      'default': {\n        'main-bg-color': '#0e1e23',\n        'header-bg-color': '#203238',\n        'header-border-color': '#415b62',\n        'tab-button-background-color': '#39545d',\n        'primary-text-color': '#ffffff',\n        'miner-sub-text-color': '#909ca0',\n        'mobile-bg-color': '#edba9f',\n        'green-color': '#5fd66a',\n        'red-color': '#ff5353',\n        'sec-mobile-bg-color': '#b37863',\n        'pri-label-color': '#879fad',\n        'just-black ': '#000000',\n        'placeholder-color': '#999999',\n        'border-bottom-color': '#1e2c31',\n        'border-right-color ': '#445f66',\n        'tab-color': '#38545d',\n        'silder-bg-color': '#d3d3d3,',\n        'secondary-modal-bg-color': '#0F1E23',\n        'container-bg-color': '#121E22',\n      },\n    },\n    username: null, //Added\n    ledger: [],\n    websocketStatus: 'Closed',\n    activeOrders: [],       //handles orders\n    recentTrades: [],       //handles recent trades\n    loaderCounter: 0,\n    markets: [],  //added\n    mappedMarkets: new Map(),   //Added (mapped by ID)\n    mappedMarketsbyName: new Map(),   //Added (mapped by name)\n    loaderCancellable: false,\n    isLoggedIn: true,\n    sidebarOpen: false,\n    tradePaneClosed: false,\n    bookPaneClosed: false,\n    liveTradePrice: 1,\n    tickerCache: {},\n    priceAnalysisSnapShot: {},\n    selectedPair: 'BTC/USD',\n    pubkeysArray: [],\n\n    selectedVegaMarketName: 'ETHBTC/DEC20',    //Added\n    selectedVegaMarketId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN',     //Added\n    selectedVegaMarketSummary: 'December 2020 ETH vs BTC future',     //Added\n    selectedVegaMarketbaseName: 'ETHBTC', //Added\n    selectedVegaMarketquoteName: 'BTC', //Added\n\n    selectedVegaMarketTradeId: 'RTJVFCMFZZQQLLYVSXTWEN62P6AH6OCN',     //Added\n    selectedVegaMarketNameTrade: 'ETHBTC/DEC20',    //Added\n    selectedVegaMarketSummaryTrade: 'December 2020 ETH vs BTC future',     //Added\n    selectedVegaMarketbaseNameTrade: 'ETHBTC', //Added\n    selectedVegaMarketquoteNameTrade: 'BTC', //Added\n\n    totalRealizedPNL_VUSD: 0,          //Realized PNL\n    totalUnrealizedPNL_VUSD: 0,        //Unrealized PNL\n    totalRealizedPNL_BTC: 0,          //Realized PNL\n    totalUnrealizedPNL_BTC: 0,        //Unrealized PNL\n\n    // totalRealizedPNL: 0,\n    selectedExchange: 'bitfinex',\n    supportedPairs: [],\n    totalPortfolioValue: 0,\n    tpvCurrency: 'USD',\n    limitTab: false,\n    marketIOCTab: true, //Added\n    limitGTCTab: false, //Added\n    limitFOKTab:false,  //Added\n    limitIOCTab: false, //Added\n    tickerData: {},\n    availablePairs: [],\n    buyPrice: 0,\n    sellPrice: 0,\n    precision: 0.0001,\n  },\n  getters: {\n    username(state) {     //Added\n      return state.username;\n    },\n    websocketStatus(state) {\n      return state.websocketStatus;\n    },\n    themeMode(state) {\n      return state.themeMode;\n    },\n    limitTab(state) {\n      return state.limitTab;\n    },\n    marketIOCTab(state) {     //Added\n      return state.marketIOCTab;\n    },\n    limitGTCTab(state) {      //Added\n      return state.limitGTCTab;\n    },\n    limitFOKTab(state) {      //Added\n      return state.limitFOKTab;\n    },\n    limitIOCTab(state) {      //Added\n      return state.limitIOCTab;\n    },\n    supportedPairs(state) {\n      return [...new Set(state.supportedPairs), ];\n    },\n    selectedPair(state) {\n      return state.selectedPair;\n    },\n    selectedVegaMarket(state) {   //Added\n      return {'selectedVegaMarketName':state.selectedVegaMarketName,'selectedVegaMarketId':state.selectedVegaMarketName,};\n    },\n    selectedVegaMarketName(state) {   //Added\n      return state.selectedVegaMarketName;\n    },\n    pubkeysArray(state) {           //returns array having pubkeys\n      return state.pubkeysArray;\n    },\n    selectedVegaMarketId(state) {     //Added\n      return state.selectedVegaMarketId;\n    },\n    selectedVegaMarketSummary(state) {  //Added\n      return state.selectedVegaMarketSummary;\n    },\n    selectedVegaMarketbaseName(state) {   //Added\n      return state.selectedVegaMarketbaseName;\n    },\n    selectedVegaMarketquoteName(state) {    //Added\n      return state.selectedVegaMarketquoteName;\n    },\n\n    selectedVegaMarketNameTrade(state) {   //Added\n      return state.selectedVegaMarketNameTrade;\n    },\n    selectedVegaMarketTradeId(state) {     //Added\n      return state.selectedVegaMarketTradeId;\n    },\n    selectedVegaMarketSummaryTrade(state) {  //Added\n      return state.selectedVegaMarketSummaryTrade;\n    },\n    selectedVegaMarketbaseNameTrade(state) {   //Added\n      return state.selectedVegaMarketbaseNameTrade;\n    },\n    selectedVegaMarketquoteNameTrade(state) {    //Added\n      return state.selectedVegaMarketquoteNameTrade;\n    },\n    \n    isLoggedIn(state) {\n      return state.isLoggedIn;\n    },\n    currentTime() {\n      return dateToDisplayTime();\n    },\n    ledger(state) {\n      return state.ledger;\n    },\n    activeOrders(state) {     //returns activeOrders\n      return state.activeOrders;\n    },\n    markets(state) {      //Added. Should store markets data\n      return state.markets;\n    },    \n    mappedMarkets(state) {  //Added. Should store markets data\n      return state.mappedMarkets;\n    },\n    mappedMarketsbyName(state) {  //Added. Should store markets data\n      return state.mappedMarketsbyName;\n    },    \n    recentTrades(state) {       //gets recent trades\n      return state.recentTrades;\n    },\n    totalUnrealizedPNL_VUSD(state) {   //totalUnrealizedPNL \n      return state.totalUnrealizedPNL_VUSD;\n    },\n    totalRealizedPNL_VUSD(state) {     //totalRealizedPNL\n      return state.totalRealizedPNL_VUSD;\n    },\n    totalUnrealizedPNL_BTC(state) {   //totalUnrealizedPNL \n      return state.totalUnrealizedPNL_BTC;\n    },\n    totalRealizedPNL_BTC(state) {     //totalRealizedPNL\n      return state.totalRealizedPNL_BTC;\n    },\n\n    showLoader(state) {\n      return state > 0;\n    },\n    loaderCancellable(state) {\n      return state.loaderCancellable;\n    },\n    sidebarOpen(state) {\n      return state.sidebarOpen;\n    },\n    liveTradePrice(state) {\n      return state.liveTradePrice;\n    },\n    tickerCache(state) {\n      return state.tickerCache;\n    },\n    priceAnalysisSnapShot(state) {\n      return state.priceAnalysisSnapShot;\n    },\n    selectedExchange(state) {\n      return state.selectedExchange;\n    },\n    formattedSelectedExchange(state) {\n      switch (state.selectedExchange) {\n        case 'vegaProtocol':\n          return 'vegaProtocol';\n        default:\n          return (\n            state.selectedExchange.charAt(0).toUpperCase() +\n                        state.selectedExchange.slice(1)\n          );\n      }\n    },\n    getTickerData(state) {\n      return state.tickerData;\n    },\n    getccTickerData(state) {\n      return state.tickerData[state.selectedPair.split('/')[0]][state.selectedPair].exchanges;\n    },\n    getAvailablePairs(state) {\n      return state.availablePairs;\n    },\n    buyPrice(state) {\n      return state.buyPrice;\n    },\n    sellPrice(state) {\n      return state.sellPrice;\n    },\n    precisionSelectedpair(state) {\n      return state.precision;\n    },\n  },\n  mutations: {\n    updateusername(state,name) {  //Added\n      state.username = name;\n    },\n    changeWebsocketStatus(state, websocketStatus) {\n      state.websocketStatus = websocketStatus;\n    },\n    changeLimitTab(state) {     //Added\n      state.limitTab = true;\n    },\n    changeToLimitFOKTab(state) {     //Added\n      state.limitFOKTab = true;\n    },\n    changeToLimitGTCTab(state) {     //Added\n      state.limitGTCTab = true;\n    },\n    changeToLimitIOCTab(state) {     //Added\n      state.limitIOCTab = true;\n    },\n    changeMarketTab(state) {    //Added\n      state.limitTab = false;\n    },\n    totalUnrealizedPNL_VUSD(state,val) {  //Added\n      state.totalUnrealizedPNL_VUSD = val;\n    },\n    totalRealizedPNL_VUSD(state,val) {      //Added\n      state.totalRealizedPNL_VUSD = val;\n    },    \n    totalUnrealizedPNL_BTC(state,val) {  //Added\n      state.totalUnrealizedPNL_BTC = val;\n    },\n    totalRealizedPNL_BTC(state,val) {      //Added\n      state.totalRealizedPNL_BTC = val;\n    },    \n    changeMarketIOCTab(state) {\n      state.marketIOCTab = false;\n    },\n    changeMarketFOKTab(state) {\n      state.marketIOCTab = true;\n    },\n\n    isLoggedIn(state, isLoggedIn) {\n      state.isLoggedIn = isLoggedIn;\n    },\n    ledger(state, newLedger) {\n      state.ledger = newLedger;\n      store.commit('totalPortfolioValue');\n    },\n    activeOrders(state, newValue) {   //Replace all orders\n      state.activeOrders = newValue;\n    },\n    addToActiveOrders(state,newOrder) {   //Add new order \n      state.activeOrders.unshift(newOrder);\n      // console.log(state.activeOrders);\n      if (state.activeOrders.length > 50) {\n        state.activeOrders.pop();\n      }\n    },\n    removeFromActiveOrders(state,orderID) {\n      for (let i=0; i<state.activeOrders.length; i++) {\n        if (state.activeOrders[i].id == orderID) {\n          let cur = state.activeOrders[i];\n          let index = state.activeOrders.indexOf(cur);\n          // console.log('DELETING ORDER - ' + cur + ' ' + index); \n          state.activeOrders.splice(index,1);\n          // console.log(state.activeOrders);\n        }\n      }\n    },\n    markets(state, newMarkets) {  //Added for markets. Should function properly\n      // console.log(newMarkets);\n      state.markets = newMarkets;\n      // console.log(state.markets);\n    },\n    mappedMarkets(state,newMarket) {  //Added for markets. Should function properly\n      // console.log(newMarket);\n      state.mappedMarkets.set(newMarket.id,newMarket.data);\n      // console.log(state.mappedMarkets);\n    },\n    mappedMarketsbyName(state,newMarket) {  //Added for markets. Should function properly\n      // console.log(newMarket);\n      state.mappedMarketsbyName.set(newMarket.data.name,newMarket); \n      // console.log('MAPPED MARKETS BY NAME -' - state.mappedMarketsbyName);\n    },    \n    recentTrades(state, newValue) {     //sets the recent trades\n      state.recentTrades = newValue;\n    },\n    addToRecentTrades(state,trade) {    //Adds new trade to recent Trades\n      state.recentTrades.unshift(trade);\n      if (state.recentTrades.length > 50) {\n        state.recentTrades.pop();\n      }\n    },\n    addLoaderTask(state, count, cancellable = false) {\n      // // console.log(count);\n      state.loaderCounter += count;\n      state.loaderCancellable = cancellable;\n    },\n    removeLoaderTask(state, count) {\n      // // console.log(count);\n      if (state.loaderCounter > 0) {\n        state.loaderCounter -= count;\n        state.loaderCancellable = false;\n      } else if (state.loaderCounter < 0) {\n        state.loaderCounter = 0;\n      }\n    },\n    toggleSidebar(state) {    //Disables/Enables page scroll when side-bar is loaded (mobile)\n      if (!state.sidebarOpen) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    toggleTradePaneClosed(state) {\n      state.tradePaneClosed = !state.tradePaneClosed;\n    },\n    toggleBookPaneClosed(state) {\n      state.bookPaneClosed = !state.bookPaneClosed;\n    },\n    closeSidebar(state) {\n      if (!state.sidebarOpen) {\n        return;\n      }\n      this.commit('toggleSidebar');\n    },\n    liveTradePrice(state, ltp) {\n      state.liveTradePrice = ltp;\n    },\n    tickerCache(state, ticker) {\n      state.tickerCache = ticker;\n    },\n    priceAnalysisSnapShot(state, snapshot) {\n      state.priceAnalysisSnapShot = snapshot;\n    },\n    selectedExchange(state, exchange) {\n      state.selectedExchange = exchange;\n    },\n    selectedPair(state, exchange) {\n      state.selectedPair = exchange;\n    },\n    changeSelectedVegaMarket(state,newMarket) { //ADDED\n      // console.log('In Store - ' );\n      state.selectedVegaMarketName = newMarket.Name;\n      state.selectedVegaMarketId = newMarket.Id;\n      // console.log(typeof(newMarket.Id));\n      // console.log(state.selectedVegaMarketName + ' ' + state.selectedVegaMarketId );\n      // console.log(typeof(state.selectedVegaMarketId));\n      state.selectedVegaMarketId = toString(state.selectedVegaMarketId);\n      // console.log(typeof(state.selectedVegaMarketId));\n    },\n    changeSelectedVegaMarketSummary(state,summary) {  //Added\n      state.selectedVegaMarketSummary = summary;\n    },\n    changeSelectedVegaMarketbaseName(state,baseName) {  //Added\n      state.selectedVegaMarketbaseName = baseName;\n    },\n    changeSelectedVegaMarketquoteName(state,quoteName) {  //Added\n      state.selectedVegaMarketquoteName = quoteName;\n    },\n////////////////////\n    changeSelectedVegaMarketNameTrade(state,Name) {  //Added (TradeTab)\n      state.selectedVegaMarketNameTrade = Name;\n    },    \n    changeSelectedVegaMarketTradeId(state,Id) {  //Added (TradeTab)\n      state.selectedVegaMarketTradeId = Id;\n    },    \n    changeSelectedVegaMarketSummaryTrade(state,summary) {  //Added (TradeTab)\n      state.selectedVegaMarketSummaryTrade = summary;\n    },\n    changeSelectedVegaMarketbaseNameTrade(state,baseName) {  //Added (TradeTab)\n      state.selectedVegaMarketbaseNameTrade = baseName;\n    },\n    changeSelectedVegaMarketquoteNameTrade(state,quoteName) {  //Added (TradeTab)\n      state.selectedVegaMarketquoteNameTrade = quoteName;\n    },\n    \n\n\n\n    addSupportedPair() {\n      // state.supportedPairs.push(pair);\n    },\n    totalPortfolioValue(state) {\n      state.totalPortfolioValue = state.ledger\n                .reduce((tpv, {\n                  currency,\n                  total,\n                }) => {\n                  currency = currency.toUpperCase();\n                  let sellPrice = 1;\n                  if (currency !== state.tpvCurrency) {\n                    sellPrice =\n                            ((((\n                              (state.tickerData[currency] || {})[\n                                    `${currency}/${state.tpvCurrency}`\n                              ] || {}\n                            ).best || {}).bids || {})[0] || {}).price || 0;\n                  }\n                  tpv += sellPrice * total;\n                  return tpv;\n                }, 0)\n                .toFixed(3);\n    },\n    changeTickerData(state, data) {\n      // alert(\"change\");\n      state.tickerData = data;\n    },\n    changePairData(state, data) {\n      state.availablePairs = data;\n    },\n    buyPrice(state, price) {\n      state.buyPrice = price;\n    },\n    sellPrice(state, price) {\n      state.sellPrice = price;\n    },\n    precisionMap(state, map) {\n      state.precision = map;\n    },\n  },\n  actions: {\n    toggleTheme({\n      state,\n    }, themeMode) {\n      state.themeMode = themeMode;\n      const themeObj = Object.keys(state.theme[themeMode]);\n      for (let i = 0; i < themeObj.length; i++) {\n        document.documentElement.style.setProperty(`--${themeObj[i]}`, state.theme[themeMode][themeObj[i]]);\n      }\n    },\n  },\n});\n\n\nexport default store;\n"]}]}