{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/App/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/App/App.vue","mtime":1595618551623},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue';\nimport Loading from 'vue-full-loading';\nimport NotificationPlugin from '../plugins/notifications.js';\nimport EventBus, {\n  EventNames,\n} from '../eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n\nimport HeaderSection from '@/components/HeaderSection/HeaderSection.vue';\nimport SideMenu from '@/components/SideMenu/SideMenu.vue';\nimport ModalBox from '@/components/ModalBox/ModalBox.vue';\nimport VegaProtocolService from '@/services/VegaProtocolService';\nimport LocalStorage from '@/utils/localStorage.js';\nimport Vuikit from 'vuikit';\nimport Notifications from 'vue-notification';\nimport Datetime from 'vue-datetime';\n// You need a specific loader for CSS files\nimport 'vue-datetime/dist/vue-datetime.css';\n \nVue.use(Datetime);\nVue.use(Vuikit);\nVue.use(Loading);\nVue.use(NotificationPlugin);\nVue.use(Notifications);\n\n\nexport default {\n  components: {\n    Loading,\n    HeaderSection,\n    SideMenu,\n    ModalBox,\n  },\n\n\n  data() {\n    return {\n      loaderLabel: 'Loading...',\n      depositModalShown: false,\n      withdrawlModalShown: false,\n      loginModalShown:false,      //Added\n      logoutModalShown:true,     //Added\n      shouldOpen: false,\n      firstTime: true,\n    };\n  },\n\n\n  computed: {\n    showLoader() {\n      return this.$store.getters.showLoader;\n    },\n    \n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n  },\n\n\n  async created() {         //STARTS GETTING TICKER DATA WHEN WEBSITE IS LOADED\n    localStorage.shouldOpen = true;\n    ExchangeDataEventBus.$emit('ticker-connect');\n    this.getMarkets();\n  },\n\n  mounted() {\n    // this.loginListener = body => this.fetchConfigs(body.username);\n    this.loginListener = body => this.fetchConfigsLogin(body.username);     //Login \n\n    this.logoutListener = body => this.fetchConfigsLogout();     //Logout\n    this.sessionExpiryListener = () => {\n      if (LocalStorage.isUserLoggedIn()) {\n        this.$showErrorMsg({\n          message: 'Your session has expired. Please login again.',\n        });\n      }\n      EventBus.$emit(EventNames.userLogout);\n    };\n  \n    EventBus.$on(EventNames.userLogin, this.loginListener);           //AUTH\n    EventBus.$on(EventNames.userLogout, this.logoutListener);           //AUTH\n    EventBus.$on(EventNames.userSessionExpired, this.sessionExpiryListener);  //AUTH\n  },\n\n\n  destroyed() {       //SESSION DESTROYED \n    EventBus.$off(EventNames.userLogin, this.loginListener);\n    EventBus.$off(EventNames.userLogout, this.logoutListener);           //AUTH    \n    EventBus.$off(EventNames.userSessionExpired, this.sessionExpiryListener);\n  },\n\n\n  methods: {\n    async fetchConfigs() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n    },\n    async fetchConfigsLogin() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      this.toggleLoginModal();\n    },\n    async fetchConfigsLogout() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      // console.log('IN LOGOUT TOGGLING');\n      // console.log(this.toggleLogoutModal);\n      this.toggleLogoutModal();\n      // console.log(this.toggleLogoutModal);\n    },\n\n    toggleDepositModal() {\n      this.depositModalShown = !this.depositModalShown;\n    },\n    toggleWithdrawlModal() {\n      this.withdrawlModalShown = !this.withdrawlModalShown;\n    },\n    toggleLoginModal() {      //ADDED\n      // console.log(this.loginModalShown);\n      this.loginModalShown = !this.loginModalShown;\n      // console.log(this.loginModalShown);      \n    },\n    toggleLogoutModal() {   //ADDED\n      // console.log(this.logoutModalShown);    \n      this.logoutModalShown = !this.logoutModalShown;\n      // console.log(this.logoutModalShown);        \n    },\n    closeBtnClicked() {\n      sessionStorage.shouldOpen = true;\n    },\n    async getMarkets() {    //getting markets\n      const markets = await VegaProtocolService.get_markets();\n      // console.log(markets);\n      if (markets.status == 200 ) {\n        let marketsData = [];\n        for (let i=0;i<markets.data.markets.length;i++) { \n          let obj = {};\n          obj.id = markets.data.markets[i].id;\n          obj.data = {};\n          obj.data.name = markets.data.markets[i].name;\n          obj.data.instrument_name = markets.data.markets[i].tradableInstrument.instrument.name;          \n          obj.baseName = markets.data.markets[i].tradableInstrument.instrument.baseName;\n          obj.quoteName = markets.data.markets[i].tradableInstrument.instrument.quoteName;          \n          // console.log(obj);     \n          this.$store.commit('mappedMarkets',obj);        //mapping markets by ID\n          this.$store.commit('mappedMarketsbyName',obj);  //mapping markets by name\n          marketsData.push(obj);    \n        }\n        // console.log(marketsData);\n        this.$store.commit('markets',marketsData);\n        // console.log(this.$store.getters.markets);\n        // console.log(this.$store.getters.mappedMarkets);\n      }\n      else {\n        this.$showErrorMsg({message: 'Couldn\\'t fetch Markets data. Some of the features may not function properly',});\n      }\n    },\n\n  },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src/App","sourcesContent":["<template>\n  <div id=\"app\">\n    <header-section @show-deposit-modal=\"toggleDepositModal\" @show-withdrawl-modal=\"toggleWithdrawlModal\" @show-login-modal=\"toggleLoginModal\" @show-logout-modal=\"toggleLogoutModal\" />\n\n     <div class=\"uk-hidden@m\">\n    <side-menu @show-deposit-modal=\"toggleDepositModal\" @show-withdrawl-modal=\"toggleWithdrawlModal\"  @show-login-modal=\"toggleLoginModal\" @show-logout-modal=\"toggleLogoutModal\" />\n    </div>\n\n    <modal-box internalComponent=\"deposit\" :show='depositModalShown' @modal-closed='toggleDepositModal' />\n    <modal-box internalComponent=\"withdrawal\"  :show='withdrawlModalShown' @modal-closed='toggleWithdrawlModal' />\n    <modal-box internalComponent=\"vega-login\"  :show='loginModalShown' @modal-closed='toggleLoginModal' />\n    <modal-box internalComponent=\"vega-logout\" :show='logoutModalShown' @modal-closed='toggleLogoutModal' />\n\n    <notifications group=\"foo\" />\n\n    <loading :show=\"showLoader\" :label=\"loaderLabel\"></loading>\n\n    <div class=\"page-wrapper\">\n      <router-view/>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Loading from 'vue-full-loading';\nimport NotificationPlugin from '../plugins/notifications.js';\nimport EventBus, {\n  EventNames,\n} from '../eventBuses/default';\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n\nimport HeaderSection from '@/components/HeaderSection/HeaderSection.vue';\nimport SideMenu from '@/components/SideMenu/SideMenu.vue';\nimport ModalBox from '@/components/ModalBox/ModalBox.vue';\nimport VegaProtocolService from '@/services/VegaProtocolService';\nimport LocalStorage from '@/utils/localStorage.js';\nimport Vuikit from 'vuikit';\nimport Notifications from 'vue-notification';\nimport Datetime from 'vue-datetime';\n// You need a specific loader for CSS files\nimport 'vue-datetime/dist/vue-datetime.css';\n \nVue.use(Datetime);\nVue.use(Vuikit);\nVue.use(Loading);\nVue.use(NotificationPlugin);\nVue.use(Notifications);\n\n\nexport default {\n  components: {\n    Loading,\n    HeaderSection,\n    SideMenu,\n    ModalBox,\n  },\n\n\n  data() {\n    return {\n      loaderLabel: 'Loading...',\n      depositModalShown: false,\n      withdrawlModalShown: false,\n      loginModalShown:false,      //Added\n      logoutModalShown:true,     //Added\n      shouldOpen: false,\n      firstTime: true,\n    };\n  },\n\n\n  computed: {\n    showLoader() {\n      return this.$store.getters.showLoader;\n    },\n    \n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n  },\n\n\n  async created() {         //STARTS GETTING TICKER DATA WHEN WEBSITE IS LOADED\n    localStorage.shouldOpen = true;\n    ExchangeDataEventBus.$emit('ticker-connect');\n    this.getMarkets();\n  },\n\n  mounted() {\n    // this.loginListener = body => this.fetchConfigs(body.username);\n    this.loginListener = body => this.fetchConfigsLogin(body.username);     //Login \n\n    this.logoutListener = body => this.fetchConfigsLogout();     //Logout\n    this.sessionExpiryListener = () => {\n      if (LocalStorage.isUserLoggedIn()) {\n        this.$showErrorMsg({\n          message: 'Your session has expired. Please login again.',\n        });\n      }\n      EventBus.$emit(EventNames.userLogout);\n    };\n  \n    EventBus.$on(EventNames.userLogin, this.loginListener);           //AUTH\n    EventBus.$on(EventNames.userLogout, this.logoutListener);           //AUTH\n    EventBus.$on(EventNames.userSessionExpired, this.sessionExpiryListener);  //AUTH\n  },\n\n\n  destroyed() {       //SESSION DESTROYED \n    EventBus.$off(EventNames.userLogin, this.loginListener);\n    EventBus.$off(EventNames.userLogout, this.logoutListener);           //AUTH    \n    EventBus.$off(EventNames.userSessionExpired, this.sessionExpiryListener);\n  },\n\n\n  methods: {\n    async fetchConfigs() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n    },\n    async fetchConfigsLogin() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      this.toggleLoginModal();\n    },\n    async fetchConfigsLogout() {\n      this.$store.commit('addLoaderTask', 1, false);\n      this.$store.commit('removeLoaderTask', 1);\n      // console.log('IN LOGOUT TOGGLING');\n      // console.log(this.toggleLogoutModal);\n      this.toggleLogoutModal();\n      // console.log(this.toggleLogoutModal);\n    },\n\n    toggleDepositModal() {\n      this.depositModalShown = !this.depositModalShown;\n    },\n    toggleWithdrawlModal() {\n      this.withdrawlModalShown = !this.withdrawlModalShown;\n    },\n    toggleLoginModal() {      //ADDED\n      // console.log(this.loginModalShown);\n      this.loginModalShown = !this.loginModalShown;\n      // console.log(this.loginModalShown);      \n    },\n    toggleLogoutModal() {   //ADDED\n      // console.log(this.logoutModalShown);    \n      this.logoutModalShown = !this.logoutModalShown;\n      // console.log(this.logoutModalShown);        \n    },\n    closeBtnClicked() {\n      sessionStorage.shouldOpen = true;\n    },\n    async getMarkets() {    //getting markets\n      const markets = await VegaProtocolService.get_markets();\n      // console.log(markets);\n      if (markets.status == 200 ) {\n        let marketsData = [];\n        for (let i=0;i<markets.data.markets.length;i++) { \n          let obj = {};\n          obj.id = markets.data.markets[i].id;\n          obj.data = {};\n          obj.data.name = markets.data.markets[i].name;\n          obj.data.instrument_name = markets.data.markets[i].tradableInstrument.instrument.name;          \n          obj.baseName = markets.data.markets[i].tradableInstrument.instrument.baseName;\n          obj.quoteName = markets.data.markets[i].tradableInstrument.instrument.quoteName;          \n          // console.log(obj);     \n          this.$store.commit('mappedMarkets',obj);        //mapping markets by ID\n          this.$store.commit('mappedMarketsbyName',obj);  //mapping markets by name\n          marketsData.push(obj);    \n        }\n        // console.log(marketsData);\n        this.$store.commit('markets',marketsData);\n        // console.log(this.$store.getters.markets);\n        // console.log(this.$store.getters.mappedMarkets);\n      }\n      else {\n        this.$showErrorMsg({message: 'Couldn\\'t fetch Markets data. Some of the features may not function properly',});\n      }\n    },\n\n  },\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\">\n  \n</style>\n"]}]}