{"remainingRequest":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Downloads/cryptowhaler/src/components/BalanceTransfer/SummaryVegaWallet/SummaryVegaWallet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Downloads/cryptowhaler/src/components/BalanceTransfer/SummaryVegaWallet/SummaryVegaWallet.vue","mtime":1595121760000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\nimport Spinner from '@/components/Spinner/Spinner.vue';\n\nexport default {\n  name: 'wallet-summary-vega',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      vegaSummary: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n    };\n  },\n  watch: {\n    searchString: function () {\n      this.updateData();          \n    },\n  },\n  async created() {\n    let data = [];\n    this.spinnerFlag = false;\n    this.initialData = data;\n  },\n  methods: {\n    updateData() {\n      this.vegaSummary = this.initialData.filter((ele) => {\n        return ele.asset.includes(this.searchString.toUpperCase());\n      });\n      this.vegaSummary = this.sortData(this.vegaSummary);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 201: \n          return data.sort((b,a) => {\n            return parseFloat(a.free) - parseFloat(b.free);\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return parseFloat(b.free) - parseFloat(a.free);\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return (parseFloat(a.free) + parseFloat(a.locked)) - (parseFloat(b.free) + parseFloat(b.locked));\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return (parseFloat(b.free) + parseFloat(b.locked)) - (parseFloat(a.free) + parseFloat(a.locked));\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n",{"version":3,"sources":["SummaryVegaWallet.vue"],"names":[],"mappings":";;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SummaryVegaWallet.vue","sourceRoot":"src/components/BalanceTransfer/SummaryVegaWallet","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport Spinner from '@/components/Spinner/Spinner.vue';\n\nexport default {\n  name: 'wallet-summary-vega',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      vegaSummary: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n    };\n  },\n  watch: {\n    searchString: function () {\n      this.updateData();          \n    },\n  },\n  async created() {\n    let data = [];\n    this.spinnerFlag = false;\n    this.initialData = data;\n  },\n  methods: {\n    updateData() {\n      this.vegaSummary = this.initialData.filter((ele) => {\n        return ele.asset.includes(this.searchString.toUpperCase());\n      });\n      this.vegaSummary = this.sortData(this.vegaSummary);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 201: \n          return data.sort((b,a) => {\n            return parseFloat(a.free) - parseFloat(b.free);\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return parseFloat(b.free) - parseFloat(a.free);\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return (parseFloat(a.free) + parseFloat(a.locked)) - (parseFloat(b.free) + parseFloat(b.locked));\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return (parseFloat(b.free) + parseFloat(b.locked)) - (parseFloat(a.free) + parseFloat(a.locked));\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n</script>\n<style lang=\"scss\" src=\"./style.scss\" scoped>\n</style>\n\n\n"]}]}