{"remainingRequest":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Downloads/cryptowhaler/src/components/History/VegaPositionsHistory/VegaPositionsHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Downloads/cryptowhaler/src/components/History/VegaPositionsHistory/VegaPositionsHistory.vue","mtime":1595121760000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Downloads/cryptowhaler/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport { dateToDisplayDateTime, } from '@/utils/utility';\n\nexport default {\n  name: 'vega-trading-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  async created() {\n    this.updateData();\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.SYMBOL.includes(this.searchString.toUpperCase()) || ele.PL.toString().includes(this.searchString) || ele.ID.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 101: \n          return data.sort((b,a) => {\n            return a.STATUS - b.STATUS;\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return b.STATUS - a.STATUS;\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.AMOUNT - b.AMOUNT;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.AMOUNT - a.AMOUNT;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.PL_PERC - b.PL_PERC;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.PL_PERC - a.PL_PERC;\n          });\n        // case 301: \n        //   return data.sort((b,a) => {\n        //     return a.MTS_CREATE - b.MTS_CREATE;\n        //   });\n        // case 302: \n        //   return data.sort((b,a) => {\n        //     return b.MTS_CREATE - a.MTS_CREATE;\n        //   });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n",{"version":3,"sources":["VegaPositionsHistory.vue"],"names":[],"mappings":";;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VegaPositionsHistory.vue","sourceRoot":"src/components/History/VegaPositionsHistory","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport { dateToDisplayDateTime, } from '@/utils/utility';\n\nexport default {\n  name: 'vega-trading-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  async created() {\n    this.updateData();\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.SYMBOL.includes(this.searchString.toUpperCase()) || ele.PL.toString().includes(this.searchString) || ele.ID.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 101: \n          return data.sort((b,a) => {\n            return a.STATUS - b.STATUS;\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return b.STATUS - a.STATUS;\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.AMOUNT - b.AMOUNT;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.AMOUNT - a.AMOUNT;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.PL_PERC - b.PL_PERC;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.PL_PERC - a.PL_PERC;\n          });\n        // case 301: \n        //   return data.sort((b,a) => {\n        //     return a.MTS_CREATE - b.MTS_CREATE;\n        //   });\n        // case 302: \n        //   return data.sort((b,a) => {\n        //     return b.MTS_CREATE - a.MTS_CREATE;\n        //   });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n</script>\n<style lang=\"scss\" src=\"./style.scss\" scoped>\n</style>\n\n\n"]}]}