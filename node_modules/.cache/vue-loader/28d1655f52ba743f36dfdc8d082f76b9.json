{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/TabBar/TabBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/TabBar/TabBar.vue","mtime":1595618551711},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n\nimport Vue from 'vue';\n\nexport default {\n  name: 'tab-bar',\n  props: {\n    mobileDropdown: {\n      type: Boolean,\n      required: false,\n    },\n    tabs: {\n      required: true,\n    },\n    routeDriven: {\n      default: false,\n      type: Boolean,\n    },\n    tabRouteMap: {\n      type: Object,\n      required: false,\n    },\n    bus: {\n      default: () => new Vue(),\n    },\n  },\n  created() {\n    this.bus.$on('change-active-tab', tab => {\n      this.activeTab = tab;\n      this.onTabChange(tab);\n      this.$emit('tab-change', this.activeTab);\n    });\n  },\n  data() {\n    let activeTab;\n    if (this.routeDriven) {\n      activeTab = Object.keys(this.tabRouteMap).find(\n        item => this.tabRouteMap[item] === this.$route.path\n      );\n      if (!activeTab) {\n        this.$router.push('/');\n      }\n    } else {\n      activeTab = this.tabs[0];\n    }\n    return {\n      activeTab,\n    };\n  },\n  methods: {\n    setActive(tab) {\n      this.activeTab = tab;\n      this.onTabChange(tab);\n    },\n    onTabChange(tab) {\n      this.activeTab = tab;\n      this.$emit('tab-change', this.activeTab);\n      if (this.routeDriven) {\n        this.$router.push(this.tabRouteMap[tab] || '/');\n      }\n    },\n    onDropDownTabChange(tab) {\n      this.$children[1].hide();\n      this.onTabChange(tab);\n    },\n  },\n};\n",{"version":3,"sources":["TabBar.vue"],"names":[],"mappings":";;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TabBar.vue","sourceRoot":"src/components/TabBar","sourcesContent":["<template src=\"./template.html\"></template>\n<script>\nimport Vue from 'vue';\n\nexport default {\n  name: 'tab-bar',\n  props: {\n    mobileDropdown: {\n      type: Boolean,\n      required: false,\n    },\n    tabs: {\n      required: true,\n    },\n    routeDriven: {\n      default: false,\n      type: Boolean,\n    },\n    tabRouteMap: {\n      type: Object,\n      required: false,\n    },\n    bus: {\n      default: () => new Vue(),\n    },\n  },\n  created() {\n    this.bus.$on('change-active-tab', tab => {\n      this.activeTab = tab;\n      this.onTabChange(tab);\n      this.$emit('tab-change', this.activeTab);\n    });\n  },\n  data() {\n    let activeTab;\n    if (this.routeDriven) {\n      activeTab = Object.keys(this.tabRouteMap).find(\n        item => this.tabRouteMap[item] === this.$route.path\n      );\n      if (!activeTab) {\n        this.$router.push('/');\n      }\n    } else {\n      activeTab = this.tabs[0];\n    }\n    return {\n      activeTab,\n    };\n  },\n  methods: {\n    setActive(tab) {\n      this.activeTab = tab;\n      this.onTabChange(tab);\n    },\n    onTabChange(tab) {\n      this.activeTab = tab;\n      this.$emit('tab-change', this.activeTab);\n      if (this.routeDriven) {\n        this.$router.push(this.tabRouteMap[tab] || '/');\n      }\n    },\n    onDropDownTabChange(tab) {\n      this.$children[1].hide();\n      this.onTabChange(tab);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\" scoped>\n</style>\n"]}]}