{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/History/VegaOrdersHistory/VegaOrdersHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/History/VegaOrdersHistory/VegaOrdersHistory.vue","mtime":1595618551730},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport { dateToDisplayDateTime, } from '@/utils/utility';\n\nexport default {\n  name: 'vega-orders-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  async created() {\n    let data = [];\n    this.initialData = data;\n    // this.updateData();\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.symbol.includes(this.searchString.toUpperCase()) || ele.type.toString().includes(this.searchString) || ele.id.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n      this.history = this.history.reverse();\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 101: \n          return data.sort((b,a) => {\n            return a.order_status - b.order_status;\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return b.order_status - a.order_status;\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.symbol - b.symbol;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.symbol - a.symbol;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.amount - b.amount;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.amount - a.amount;\n          });\n        case 401: \n          return data.sort((b,a) => {\n            return a.price - b.price;\n          });\n        case 402: \n          return data.sort((b,a) => {\n            return b.price - a.price;\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n",{"version":3,"sources":["VegaOrdersHistory.vue"],"names":[],"mappings":";;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VegaOrdersHistory.vue","sourceRoot":"src/components/History/VegaOrdersHistory","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport { dateToDisplayDateTime, } from '@/utils/utility';\n\nexport default {\n  name: 'vega-orders-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  async created() {\n    let data = [];\n    this.initialData = data;\n    // this.updateData();\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.symbol.includes(this.searchString.toUpperCase()) || ele.type.toString().includes(this.searchString) || ele.id.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n      this.history = this.history.reverse();\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.reverse();\n        case 1: \n          return data;\n        case 101: \n          return data.sort((b,a) => {\n            return a.order_status - b.order_status;\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return b.order_status - a.order_status;\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.symbol - b.symbol;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.symbol - a.symbol;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.amount - b.amount;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.amount - a.amount;\n          });\n        case 401: \n          return data.sort((b,a) => {\n            return a.price - b.price;\n          });\n        case 402: \n          return data.sort((b,a) => {\n            return b.price - a.price;\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n</script>\n<style lang=\"scss\" src=\"./style.scss\" scoped>\n</style>\n\n\n"]}]}