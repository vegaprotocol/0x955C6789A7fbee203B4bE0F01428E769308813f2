{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Landing/MarketView/TradePane/Ticker/Ticker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/Landing/MarketView/TradePane/Ticker/Ticker.vue","mtime":1595618551695},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n// import VegaProtocolService from '@/services/VegaProtocolService';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\n\nconst LIVE_TICKERS = gql`\nsubscription {\n  marketData  {\n    market {\n      id\n      name\n      tradableInstrument {\n        instrument {\n          name \n          baseName\n          quoteName\n        }    \n      }\n    }\n    bestBidPrice\n    bestOfferPrice\n    midPrice\n  }\n}`;\n\nexport default {\n  name: 'ticker',\n  components: {\n    Spinner,\n  },\n\n  data() {\n    return {\n      tickerObj: {},\n      tickers: [],\n      snapTaken: false,\n      showLoader: false,\n      i: 0,\n    //   toggleOn: true,\n    //   toggleFees: false,\n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      tickers: {\n        query: LIVE_TICKERS,\n        result(data) {\n          let tickers = data.data.marketData;\n          (this.i)++;\n          // // console.log(tickers);\n          setTimeout(() => {\n            this.addnewTicker(tickers);\n          },(this.i*1000 + 1000)); \n        }, \n      },\n    },\n  },\n\n  created() {\n    if (JSON.stringify(this.$store.state.tickerData) == '{}') { //Showing loader initially when page loaded\n      this.showLoader = true;\n    }\n    setTimeout(() => {this.showLoader = false;}, 3000);\n  },\n\n  methods: {\n    tickerClick(ticker) {\n      let selectedMarket = {'Name':ticker.markName,'Id':ticker.markId,};\n      let selectedMarketTrade = {'Name':ticker.markName,'Id':ticker.markId,'baseName':ticker.baseName,'quoteName':ticker.quoteName,'summary':ticker.summary,};\n      // console.log(selectedMarket);\n      this.$store.commit('changeSelectedVegaMarket', selectedMarket );      \n      this.$store.commit('changeSelectedVegaMarketSummary', ticker.summary);\n      this.$store.commit('changeSelectedVegaMarketbaseName', ticker.baseName);      \n      this.$store.commit('changeSelectedVegaMarketquoteName', ticker.quoteName);      \n      this.$store.commit('changeSelectedVegaMarketTrade', selectedMarketTrade );        //Used for trade Tab\n      this.$store.commit('changeSelectedVegaMarketNameTrade', ticker.markName );  //Name change (eq - ETHVUSD/DEC20)\n      this.$store.commit('changeSelectedVegaMarketTradeId', ticker.markId);   //Selected market in TradeTab - ID Change\n      this.$store.commit('changeSelectedVegaMarketbaseNameTrade', ticker.baseName);\n      this.$store.commit('changeSelectedVegaMarketquoteNameTrade', ticker.quoteName );\n      this.$store.commit('changeSelectedVegaMarketSummaryTrade',ticker.summary);\n\n      ExchangeDataEventBus.$emit('change-vega-market', selectedMarket);      \n      ExchangeDataEventBus.$emit('change-vega-header', {'Name':ticker.markName,'Summary':ticker.summary,});\n      this.$root.$emit('tickerClicked');\n    },\n\n    addnewTicker(tickers) {\n      let obj = [];\n      obj.markId = tickers.market.id;\n      obj.markName = tickers.market.name;\n      obj.bid = (Number(tickers.bestBidPrice)/100000).toFixed(5);\n      obj.ask = (Number(tickers.bestOfferPrice)/100000).toFixed(5);\n      obj.mid = (Number(tickers.midPrice)/1000).toFixed(5);\n      obj.summary = tickers.market.tradableInstrument.instrument.name;\n      obj.baseName = tickers.market.tradableInstrument.instrument.baseName;\n      obj.quoteName = tickers.market.tradableInstrument.instrument.quoteName;\n      // // console.log(obj);\n      this.tickers.unshift(obj);\n      if(this.tickers.length > 15) {\n        this.tickers.pop();\n      }\n    },\n\n    // toggle(e) {\n    //   e.preventDefault();\n    //   this.toggleOn = !this.toggleOn;\n    //   e.target.innerHTML = e.target.innerHTML === 'Fees Off' ? 'Fees On' : 'Fees Off';\n    // },\n  },\n\n};\n",{"version":3,"sources":["Ticker.vue"],"names":[],"mappings":";;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Ticker.vue","sourceRoot":"src/components/Landing/MarketView/TradePane/Ticker","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport ExchangeDataEventBus from '@/eventBuses/exchangeData';\n// import VegaProtocolService from '@/services/VegaProtocolService';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport gql from 'graphql-tag';\n\nconst LIVE_TICKERS = gql`\nsubscription {\n  marketData  {\n    market {\n      id\n      name\n      tradableInstrument {\n        instrument {\n          name \n          baseName\n          quoteName\n        }    \n      }\n    }\n    bestBidPrice\n    bestOfferPrice\n    midPrice\n  }\n}`;\n\nexport default {\n  name: 'ticker',\n  components: {\n    Spinner,\n  },\n\n  data() {\n    return {\n      tickerObj: {},\n      tickers: [],\n      snapTaken: false,\n      showLoader: false,\n      i: 0,\n    //   toggleOn: true,\n    //   toggleFees: false,\n    };\n  },\n\n  apollo: {\n    $subscribe: {\n      tickers: {\n        query: LIVE_TICKERS,\n        result(data) {\n          let tickers = data.data.marketData;\n          (this.i)++;\n          // // console.log(tickers);\n          setTimeout(() => {\n            this.addnewTicker(tickers);\n          },(this.i*1000 + 1000)); \n        }, \n      },\n    },\n  },\n\n  created() {\n    if (JSON.stringify(this.$store.state.tickerData) == '{}') { //Showing loader initially when page loaded\n      this.showLoader = true;\n    }\n    setTimeout(() => {this.showLoader = false;}, 3000);\n  },\n\n  methods: {\n    tickerClick(ticker) {\n      let selectedMarket = {'Name':ticker.markName,'Id':ticker.markId,};\n      let selectedMarketTrade = {'Name':ticker.markName,'Id':ticker.markId,'baseName':ticker.baseName,'quoteName':ticker.quoteName,'summary':ticker.summary,};\n      // console.log(selectedMarket);\n      this.$store.commit('changeSelectedVegaMarket', selectedMarket );      \n      this.$store.commit('changeSelectedVegaMarketSummary', ticker.summary);\n      this.$store.commit('changeSelectedVegaMarketbaseName', ticker.baseName);      \n      this.$store.commit('changeSelectedVegaMarketquoteName', ticker.quoteName);      \n      this.$store.commit('changeSelectedVegaMarketTrade', selectedMarketTrade );        //Used for trade Tab\n      this.$store.commit('changeSelectedVegaMarketNameTrade', ticker.markName );  //Name change (eq - ETHVUSD/DEC20)\n      this.$store.commit('changeSelectedVegaMarketTradeId', ticker.markId);   //Selected market in TradeTab - ID Change\n      this.$store.commit('changeSelectedVegaMarketbaseNameTrade', ticker.baseName);\n      this.$store.commit('changeSelectedVegaMarketquoteNameTrade', ticker.quoteName );\n      this.$store.commit('changeSelectedVegaMarketSummaryTrade',ticker.summary);\n\n      ExchangeDataEventBus.$emit('change-vega-market', selectedMarket);      \n      ExchangeDataEventBus.$emit('change-vega-header', {'Name':ticker.markName,'Summary':ticker.summary,});\n      this.$root.$emit('tickerClicked');\n    },\n\n    addnewTicker(tickers) {\n      let obj = [];\n      obj.markId = tickers.market.id;\n      obj.markName = tickers.market.name;\n      obj.bid = (Number(tickers.bestBidPrice)/100000).toFixed(5);\n      obj.ask = (Number(tickers.bestOfferPrice)/100000).toFixed(5);\n      obj.mid = (Number(tickers.midPrice)/1000).toFixed(5);\n      obj.summary = tickers.market.tradableInstrument.instrument.name;\n      obj.baseName = tickers.market.tradableInstrument.instrument.baseName;\n      obj.quoteName = tickers.market.tradableInstrument.instrument.quoteName;\n      // // console.log(obj);\n      this.tickers.unshift(obj);\n      if(this.tickers.length > 15) {\n        this.tickers.pop();\n      }\n    },\n\n    // toggle(e) {\n    //   e.preventDefault();\n    //   this.toggleOn = !this.toggleOn;\n    //   e.target.innerHTML = e.target.innerHTML === 'Fees Off' ? 'Fees On' : 'Fees Off';\n    // },\n  },\n\n};\n</script>\n\n<style lang=\"scss\" src=\"./style.scss\" scoped></style>\n\n"]}]}