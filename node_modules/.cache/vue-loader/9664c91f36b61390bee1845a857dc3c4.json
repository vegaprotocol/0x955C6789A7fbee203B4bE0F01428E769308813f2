{"remainingRequest":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/History/VegaDepositHistory/VegaDepositHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/src/components/History/VegaDepositHistory/VegaDepositHistory.vue","mtime":1595618551735},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chrismoores/Projects/Vega/0x955C6789A7fbee203B4bE0F01428E769308813f2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\nimport { dateToDisplayDateTime, } from '@/utils/utility';\nimport Spinner from '@/components/Spinner/Spinner.vue';\n\nexport default {\n  name: 'vega-deposit-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  created() {\n    this.updateData();\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    copyReferral(id) {\n      let copyText = document.querySelector(`#txhash${id}`);\n      copyText.select();\n      copyText.select();\n      document.execCommand('copy');\n      // alert(\"Copied the text: \" + copyText.value);\n      this.$showSuccessMsg({ message: 'Transaction Hash copied successfully.', });\n    }, \n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.currency.includes(this.searchString.toUpperCase()) || ele.id.toString().includes(this.searchString) || ele.destinationAddress.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.sort((b,a) => {\n            return a.id - b.id;\n          });\n        case 1: \n          return data.sort((b,a) => {\n            return b.id - a.id;\n          });\n        case 101: \n          return data.sort((b,a) => {\n            return ('' + a.currency).localeCompare(b.currency);\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return ('' + b.currency).localeCompare(a.currency);\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.amount - b.amount;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.amount - a.amount;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.movementLastUpdated - b.movementLastUpdated;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.movementLastUpdated - a.movementLastUpdated;\n          });\n        case 401: \n          return data.sort((b,a) => {\n            return ('' + a.status).localeCompare(b.status);\n          });\n        case 402: \n          return data.sort((b,a) => {\n            return ('' + b.status).localeCompare(a.status);\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n",{"version":3,"sources":["VegaDepositHistory.vue"],"names":[],"mappings":";;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VegaDepositHistory.vue","sourceRoot":"src/components/History/VegaDepositHistory","sourcesContent":["<template src=\"./template.html\"></template>\n\n<script>\nimport { dateToDisplayDateTime, } from '@/utils/utility';\nimport Spinner from '@/components/Spinner/Spinner.vue';\n\nexport default {\n  name: 'vega-deposit-history',\n  components: {\n    Spinner,\n  },\n  data() {\n    return {\n      history: [],\n      spinnerFlag: true,\n      sortBy: 0,\n      searchString: '',\n      initialData: [],\n      displayText: 'Note: This feature is currently not supported with Vega Testnet',\n    };\n  },\n  watch: {\n    searchString: function() {\n      this.updateData();\n    },\n  },\n  created() {\n    this.updateData();\n  },\n  methods: {\n    formatDateTime(timestamp) {\n      return dateToDisplayDateTime(new Date(timestamp));\n    },\n    copyReferral(id) {\n      let copyText = document.querySelector(`#txhash${id}`);\n      copyText.select();\n      copyText.select();\n      document.execCommand('copy');\n      // alert(\"Copied the text: \" + copyText.value);\n      this.$showSuccessMsg({ message: 'Transaction Hash copied successfully.', });\n    }, \n    updateData() {\n      this.history = this.initialData.filter((ele) => {\n        return ele.currency.includes(this.searchString.toUpperCase()) || ele.id.toString().includes(this.searchString) || ele.destinationAddress.toString().includes(this.searchString) ;\n      });\n      this.history = this.sortData(this.history);\n    },\n    sortData(data) {\n      switch(this.sortBy) {\n        case 0: \n          return data.sort((b,a) => {\n            return a.id - b.id;\n          });\n        case 1: \n          return data.sort((b,a) => {\n            return b.id - a.id;\n          });\n        case 101: \n          return data.sort((b,a) => {\n            return ('' + a.currency).localeCompare(b.currency);\n          });\n        case 102: \n          return data.sort((b,a) => {\n            return ('' + b.currency).localeCompare(a.currency);\n          });\n        case 201: \n          return data.sort((b,a) => {\n            return a.amount - b.amount;\n          });\n        case 202: \n          return data.sort((b,a) => {\n            return b.amount - a.amount;\n          });\n        case 301: \n          return data.sort((b,a) => {\n            return a.movementLastUpdated - b.movementLastUpdated;\n          });\n        case 302: \n          return data.sort((b,a) => {\n            return b.movementLastUpdated - a.movementLastUpdated;\n          });\n        case 401: \n          return data.sort((b,a) => {\n            return ('' + a.status).localeCompare(b.status);\n          });\n        case 402: \n          return data.sort((b,a) => {\n            return ('' + b.status).localeCompare(a.status);\n          });\n      }\n    },\n    sortDataBy(value) {\n      if(this.sortBy === value) {\n        this.sortBy += 1;\n      } else {\n        this.sortBy = value;\n      }\n      this.updateData();\n    },\n  },\n};\n</script>\n<style lang=\"scss\" src=\"./style.scss\" scoped>\n</style>\n\n\n"]}]}